<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d" x:Class="isilproto.App"
               xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
     
    
    StartupUri="splash.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Simple Styles.xaml"/>

                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ToggleButtonStyle2" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="dockBtnPa" TargetType="{x:Type ToggleButton}">

                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="grid" Background="#FFB4A583">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FFFFA800"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true"/>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DockBtnOpenhouse" TargetType="{x:Type ToggleButton}">

                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="grid" Background="#FFA28DA0">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FFA24198"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true"/>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="dockbtnOpenGroup" TargetType="{x:Type ToggleButton}">

                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="grid" Background="#FF9C908C">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FFF05A28"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted" Value="true"/>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="btnrec" TargetType="{x:Type ToggleButton}">
            	<Grid>
            		<Ellipse Fill="{x:Null}" HorizontalAlignment="Left" Height="50" Stroke="White" VerticalAlignment="Top" Width="50" StrokeThickness="4"/>
            		<Path Data="M20,15.9 L20,33.904444" Fill="{x:Null}" HorizontalAlignment="Left" Height="13.871" Margin="26.5,17.833,0,0" Stretch="Fill" Stroke="White" StrokeThickness="4" VerticalAlignment="Top" Width="2"/>
            		<Path Data="M20,15.9 L20,33.904444" Fill="{x:Null}" HorizontalAlignment="Left" Height="13.871" Margin="21,17.833,0,0" Stretch="Fill" Stroke="White" StrokeThickness="4" VerticalAlignment="Top" Width="2"/>
            	</Grid>
            </ControlTemplate>
            <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
            <Style x:Key="browsertext" TargetType="{x:Type TextBox}">
            	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            	<Setter Property="HorizontalContentAlignment" Value="Left"/>

            	<Setter Property="AllowDrop" Value="true"/>
            	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type TextBox}">
            				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Margin="-0.246,0,0,0.41">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="Disabled"/>
            							<VisualState x:Name="ReadOnly"/>
            							<VisualState x:Name="MouseOver"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Grid>
            						<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="40,0,0,0"/>
            						<Path Data="F1M12.733,13.315C10.38,14.417 8.414,16.114 6.99,18.188 7.708,18.368 8.458,18.463 9.232,18.463 10.626,18.463 11.944,18.153 13.128,17.601 13.319,16.67 13.419,15.709 13.419,14.722 13.419,14.366 13.403,14.014 13.376,13.665 13.139,13.588 12.922,13.469 12.733,13.315 M15.429,2.389C13.95,2.532 12.537,2.903 11.221,3.461 11.229,3.526 11.231,3.591 11.231,3.658 11.231,3.968 11.158,4.26 11.03,4.521 12.344,6.064 13.366,7.862 14.009,9.831 14.808,9.845 15.491,10.335 15.785,11.029 16.673,10.938 17.539,10.769 18.372,10.524 18.431,10.102 18.464,9.67 18.464,9.231 18.464,6.518 17.294,4.078 15.429,2.389 M11.745,12.266C9.466,11.888 7.353,11.018 5.514,9.773 5.215,9.955 4.865,10.064 4.489,10.064 4.351,10.064 4.216,10.048 4.086,10.022 3.206,11.69 2.643,13.552 2.482,15.526 3.36,16.468 4.433,17.228 5.637,17.738 7.133,15.438 9.225,13.535 11.745,12.266 M14.753,13.596C14.78,13.968 14.794,14.343 14.794,14.722 14.794,15.389 14.752,16.045 14.67,16.69 16.237,15.546 17.428,13.923 18.03,12.036 17.317,12.208 16.587,12.331 15.841,12.402 15.667,12.94 15.266,13.375 14.753,13.596 M12.205,10.945C12.327,10.691 12.501,10.465 12.715,10.286 12.135,8.503 11.217,6.871 10.034,5.467 9.799,5.567 9.54,5.622 9.268,5.622 8.841,5.622 8.448,5.485 8.127,5.254 7.415,5.795 6.756,6.402 6.157,7.065 6.344,7.365 6.453,7.719 6.453,8.099 6.453,8.304 6.421,8.502 6.363,8.688 8.086,9.838 10.068,10.627 12.205,10.945 M9.268,1.694C9.786,1.694 10.256,1.896 10.608,2.225 11.633,1.784 12.712,1.445 13.835,1.23 12.479,0.449 10.909,0 9.232,0 8.089,0 6.996,0.209 5.985,0.589 6.787,0.985 7.551,1.447 8.27,1.968 8.563,1.794 8.903,1.694 9.268,1.694 M2.525,8.099C2.525,7.823 2.582,7.561 2.685,7.323 2.054,6.63 1.483,5.884 0.983,5.087 0.356,6.334 0,7.741 0,9.231 0,10.958 0.475,12.573 1.299,13.955 1.594,12.294 2.153,10.724 2.926,9.285 2.675,8.955 2.525,8.545 2.525,8.099 M4.489,6.135C4.691,6.135 4.885,6.165 5.068,6.222 5.76,5.446 6.527,4.74 7.358,4.114 7.324,3.968 7.303,3.815 7.303,3.658 7.303,3.44 7.34,3.232 7.405,3.036 6.475,2.368 5.462,1.808 4.385,1.375 3.376,1.998 2.496,2.812 1.794,3.765 2.315,4.687 2.934,5.548 3.638,6.331 3.896,6.206 4.184,6.135 4.489,6.135" Fill="#FF0B95A1" Height="Auto" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,10.565,0,10.565" />
            					</Grid>
            				</Border>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
            					</Trigger>
            					<Trigger Property="IsKeyboardFocused" Value="true">
            						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="btnReset" TargetType="{x:Type Button}">
          
            	<Setter Property="Background" Value="#FF2D292A"/>
            	<Setter Property="BorderBrush" Value="{x:Null}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Grid x:Name="grid" Background="#FF2D292A">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.3" To="MouseOver"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="34.471,12.016,5.909,10.737" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="36.62"/>
            					<Path Data="M1.179,10.934 L7.072,1.868 5.778,0.144 11.766,0 11.91,6.037 10.186,4.791 z M14.485,2.937 L19.255,12.604 21.398,12.374 18.464,17.595 13.2,14.636 15.152,13.789 z M14.795,18.483 L3.994,18.007 3.164,19.999 2.0027159E-08,14.913 5.128,11.724 4.932,13.841 z" Fill="#FFACABAB" Height="Auto" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="9.29,10.36,0,9.64" />
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnSetup" TargetType="{x:Type Button}">
            	<Setter Property="Background" Value="#FF2D292A"/>
            	<Setter Property="BorderBrush" Value="{x:Null}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Grid x:Name="grid" Background="#FF2D292A">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.3" To="MouseOver"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="37.741,12.016,9.884,10.378" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="35.375" Height="17.606"/>
            					<Path Data="F1M16.107,16.022L13.006,17.885 9.382,17.885 6.216,16.129 4.408,12.995 4.343,9.373 6.153,6.239 9.258,4.373 12.878,4.373 16.045,6.127 17.856,9.263 17.919,12.885z M22.263,11.129L20.725,8.465 20.671,5.395 18.143,3.994 16.697,1.489 13.624,1.489 10.937,0 8.459,1.489 5.566,1.489 4.03,4.149 1.394,5.733 1.445,8.626 0,11.129 1.536,13.79 1.589,16.864 4.121,18.266 5.566,20.77 8.64,20.77 11.326,22.258 13.803,20.77 16.697,20.77 18.234,18.108 20.867,16.526 20.816,13.635z" Fill="#FF8B8B8B" Height="Auto" Width="Auto" Margin="11.213,8.972,49.524,8.77"/>
            					<Path Data="F1M2.73,0C1.222,0 0,1.223 0,2.73 0,4.238 1.222,5.461 2.73,5.461 4.237,5.461 5.459,4.238 5.459,2.73 5.459,1.223 4.237,0 2.73,0" Fill="#FF8B8B8B" Height="Auto" Width="Auto" Margin="19.614,17.371,57.927,17.168"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnshut" TargetType="{x:Type Button}">
     
            	<Setter Property="Background" Value="#FF2D292A"/>
            	<Setter Property="BorderBrush" Value="{x:Null}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Grid x:Name="grid" Background="#FF2D292A" Margin="0,0,0.187,0">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.4" To="MouseOver"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="Red"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="61.622" Margin="34.878,11.376,6.313,11.376"/>
            					<Path x:Name="path" Data="M9.563,20.937C8.641,20.937,7.884,20.182,7.884,19.259L7.884,11.373C7.884,10.45 8.641,9.695 9.563,9.695 10.486,9.695 11.24,10.45 11.24,11.373L11.24,19.259C11.24,20.182,10.486,20.937,9.563,20.937 M12.3,19.035L12.3,16.036C14.793,15.009 16.547,12.557 16.547,9.695 16.547,5.909 13.478,2.84 9.694,2.84 5.909,2.84 2.838,5.909 2.838,9.695 2.838,12.405 4.414,14.748 6.695,15.86L6.695,18.916C2.808,17.653 0,14.002 0,9.695 0,4.341 4.339,0 9.694,0 15.048,0 19.388,4.341 19.388,9.695 19.388,14.146 16.387,17.897 12.3,19.035" Fill="#FF04AFB8" Height="Auto" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="9.354,9.531,0,9.531" />
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Storyboard x:Key="browserLoading" RepeatBehavior="Forever" >
            	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path">
            		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="180"/>
            		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="360"/>
            	</DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Style x:Key="BROWSERcOUSER" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Grid>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.4" To="MouseOver"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
            										<EasingPointKeyFrame KeyTime="0" Value="-5.29395592033938E-23,0.483971744515781"/>
            									</PointAnimationUsingKeyFrames>
            									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.StartPoint)" Storyboard.TargetName="path">
            										<EasingPointKeyFrame KeyTime="0" Value="0.827263750403704,16.3695013284365"/>
            									</PointAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
            										<EasingColorKeyFrame KeyTime="0" Value="White"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="White"/>
            									</ColorAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Layer_2">
            										<EasingDoubleKeyFrame KeyTime="0" Value="6.204"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0" To="Checked"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Layer_2">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            									</ObjectAnimationUsingKeyFrames>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Layer_1">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            									</ObjectAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF00A79D"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Rectangle x:Name="rectangle" Fill="#FFFBAD17" Stroke="{x:Null}" RenderTransformOrigin="0.5,0.5">
            						<Rectangle.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Rectangle.RenderTransform>
            					</Rectangle>
            					<Canvas x:Name="Layer_1" Height="18.8" Width="21.4" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden">
            						<Path Data="F1M9.777,15.197L0,19.256 0,4.059 9.777,0z" Fill="White" Height="19.256" Canvas.Left="11.464" Canvas.Top="0" Width="9.777"/>
            						<Path Data="F1M0,15.197L9.776,19.256 9.776,4.059 0,0z" Fill="White" Height="19.256" Canvas.Left="0" Canvas.Top="0" Width="9.775"/>
            					</Canvas>
            					<Canvas x:Name="Layer_2" Height="19.6" Width="13.7" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path x:Name="path" Fill="#FF939598" Height="19.141" Canvas.Left="-9.667" Canvas.Top="0" Width="19.309">
            							<Path.Data>
            								<PathGeometry FillRule="Nonzero">
            									<PathFigure IsClosed="True" StartPoint="19.3091076564078,15.196">
            										<LineSegment Point="9.66710765640779,19.141"/>
            										<LineSegment Point="9.66710765640779,4.105"/>
            										<LineSegment Point="19.3091076564078,0"/>
            									</PathFigure>
            								</PathGeometry>
            							</Path.Data>
            						</Path>
            						<Path Data="F1M9.777,15.197L0,19.256 0,4.059 9.777,0z" Fill="White" Height="19.256" Canvas.Left="1.865" Canvas.Top="0.463" Width="9.777"/>
            						<Path x:Name="path1" Data="F1M1.864,15.613L0,15.114 0,0 1.864,0.38z" Fill="#FFE6E7E8" Height="15.613" Canvas.Left="0" Canvas.Top="4.106" Width="1.864"/>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnComputer" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="Storyboard1">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle1">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle2">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="Storyboard2">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle1">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="Storyboard3">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle2">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FF859E9D">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.3" To="MouseOver"/>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver"/>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.2" To="Checked"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF09CB94"/>
            									</ColorAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="11.998,0,0,7.164" Opacity="0.5"/>
            					<Rectangle x:Name="rectangle" Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="28.8" Margin="22,8,0,0" Stroke="Black" VerticalAlignment="Top" Width="31.2"/>
            					<Rectangle x:Name="rectangle2" Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="19.2" Margin="19.6,53.6,0,0" Stroke="Black" VerticalAlignment="Top" Width="52.8"/>
            					<Rectangle x:Name="rectangle1" Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="39.6" Margin="83.2,11.6,0,0" Stroke="Black" VerticalAlignment="Top" Width="33.6"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="Uid" Value="1">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="Uid" Value="2">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="Storyboard2_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsChecked" Value="False"/>
            					<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
            					<Trigger Property="IsChecked" Value="False"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnOpenhouse" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="OnChecked1" RepeatBehavior="Forever"  AutoReverse="True">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse">
            							<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.8" Value="-4.004"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="-3.754"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
            							<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.8" Value="16.267"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="23.775"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
            							<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.4" Value="1"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse_Copy">
            							<SplineDoubleKeyFrame KeyTime="0" Value="9.009"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="11.011"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1" Value="9.509"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.4" Value="4.879"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="6.257"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse_Copy">
            							<SplineDoubleKeyFrame KeyTime="0" Value="-2.002"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="-2.252"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.4" Value="-9.134"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="-2.252"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_Copy">
            							<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse_Copy1">
            							<SplineDoubleKeyFrame KeyTime="0" Value="13.514"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="16.017"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1" Value="18.77"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.8" Value="30.032"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="10.01"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse_Copy1">
            							<SplineDoubleKeyFrame KeyTime="0" Value="1.752"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="-2.252"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1" Value="-8.509"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.8" Value="-10.761"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="-2.753"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_Copy1">
            							<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:1.8" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse_Copy2">
            							<SplineDoubleKeyFrame KeyTime="0" Value="34.536"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.8" Value="27.728"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="11.262"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse_Copy2">
            							<SplineDoubleKeyFrame KeyTime="0" Value="-6.257"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.8" Value="-5.055"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="-5.756"/>
            						</DoubleAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="ellipse_Copy2">
            							<SplinePointKeyFrame KeyTime="0" Value="0.5,0.5"/>
            							<SplinePointKeyFrame KeyTime="0:0:2" Value="-5,-0.437"/>
            						</PointAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_Copy2">
            							<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
            							<SplineDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
            							<SplineColorKeyFrame KeyTime="0:0:0.4" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:0.6" Value="sc#1, 0.00518151652, 0.7758222, 0.6653873"/>
            							<SplineColorKeyFrame KeyTime="0:0:0.8" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:1.4" Value="#FF7EAB12"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
            							<SplineColorKeyFrame KeyTime="0:0:0.6" Value="#FF64FFDD"/>
            							<SplineColorKeyFrame KeyTime="0:0:1" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy1">
            							<SplineColorKeyFrame KeyTime="0:0:1" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:1.6" Value="#FF00AAE4"/>
            							<SplineColorKeyFrame KeyTime="0:0:1.8" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="ellipse_Copy">
            							<SplinePointKeyFrame KeyTime="0:0:1.4" Value="0.5,0.5"/>
            							<SplinePointKeyFrame KeyTime="0:0:2" Value="1.813,0.187"/>
            						</PointAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            							<SplineColorKeyFrame KeyTime="0:0:0.6" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:1.5" Value="#FF17C0FA"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
            							<SplineColorKeyFrame KeyTime="0:0:0.6" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:1.5" Value="#FF17C0FA"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
            							<SplineColorKeyFrame KeyTime="0" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:1.2" Value="#FF17C0FA"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
            							<SplineColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
            							<SplineColorKeyFrame KeyTime="0:0:1.029" Value="#FF17C0FA"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path4">
            							<SplineColorKeyFrame KeyTime="0:0:0.3" Value="#FF17C0FA"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path5">
            							<SplineColorKeyFrame KeyTime="0:0:0.3" Value="#FF17C0FA"/>
            							<SplineColorKeyFrame KeyTime="0:0:2" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FF848F9B">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="OPENHOUSE_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="15.3,8.5,67.3,38.5"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OPENHOUSE_Copy">
            											<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            										</DoubleAnimationUsingKeyFrames>
            										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="OPENHOUSE_Copy">
            											<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="3.712"/>
            										</DoubleAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="OPENHOUSE_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="-0.34,8.5,82.94,38.5"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OPENHOUSE_Copy">
            											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            											<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            										</DoubleAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="OPENHOUSE">
            										<EasingDoubleKeyFrame KeyTime="0" Value="-15.64"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OPENHOUSE">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="OPENHOUSE_Copy">
            										<EasingThicknessKeyFrame KeyTime="0" Value="15.3,8.5,67.3,38.5"/>
            									</ThicknessAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OPENHOUSE_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="OPENHOUSE_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="3.712"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.2" To="Checked"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF2A84EB"/>
            										<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF2A84EB"/>
            									</ColorAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="11.998,0,0,8.593" Opacity="0.5"/>
            					<Canvas x:Name="OPENHOUSE" Height="28" Width="50.4" Margin="15.3,11.315,67.3,35.685" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path x:Name="path4" Data="M5.854,0L6.141,0C7.393,1.164 9.014,1.867 10.786,1.867 12.557,1.867 14.179,1.164 15.43,0L15.717,0C18.938,0,20.728,2.649,21.027,5.855L21.574,11.712 0,11.712 0.545,5.855C0.844,2.649,2.634,0,5.854,0" Fill="White" Height="11.712" Canvas.Left="0" Canvas.Top="17.817" Width="21.574"/>
            						<Path x:Name="path2" Data="M5.312,0C8.247,0 10.624,2.681 10.624,5.987 10.624,9.294 8.247,11.975 5.312,11.975 2.377,11.975 0,9.294 0,5.987 0,2.681 2.377,0 5.312,0" Fill="White" Height="11.975" Canvas.Left="20.077" Canvas.Top="3" Width="10.624"/>
            						<Path x:Name="path3" Data="M3.272,0L3.558,0C4.81,1.163 6.432,1.866 8.203,1.866 9.975,1.866 11.596,1.163 12.848,0L13.133,0C16.355,0,18.145,2.649,18.444,5.855L18.99,11.712 5.895,11.712 5.6,8.537C5.274,5.051 3.372,1.928 0,1.226 0.839,0.459 1.932,0 3.272,0" Fill="White" Height="11.712" Canvas.Left="17.186" Canvas.Top="14.973" Width="18.99"/>
            						<Path x:Name="path" Data="M5.312,0C8.247,0 10.624,2.681 10.624,5.987 10.624,9.294 8.247,11.975 5.312,11.975 2.377,11.975 0,9.294 0,5.987 0,2.681 2.377,0 5.312,0" Fill="White" Height="11.975" Canvas.Left="35.077" Canvas.Top="0" Width="10.624"/>
            						<Path x:Name="path1" Data="M3.272,0L3.558,0C4.81,1.163 6.432,1.866 8.203,1.866 9.975,1.866 11.596,1.163 12.848,0L13.133,0C16.355,0,18.145,2.649,18.444,5.855L18.99,11.712 5.895,11.712 5.6,8.537C5.274,5.051 3.372,1.928 0,1.226 0.839,0.459 1.932,0 3.272,0" Fill="White" Height="11.712" Canvas.Left="32.186" Canvas.Top="11.973" Width="18.99"/>
            						<Path x:Name="path5" Data="M5.312,0C8.245,0 10.624,2.681 10.624,5.987 10.624,9.294 8.245,11.975 5.312,11.975 2.376,11.975 -0.001,9.294 -0.001,5.987 -0.001,2.681 2.376,0 5.312,0" Fill="White" Height="11.975" Canvas.Left="5.475" Canvas.Top="5.845" Width="10.624"/>
            					</Canvas>
            					<Canvas x:Name="OPENHOUSE_Copy" Height="28" Width="50.4" Margin="-0.34,12.742,82.94,34.258" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Opacity="0">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="M5.854,0L6.141,0C7.393,1.164 9.014,1.867 10.786,1.867 12.557,1.867 14.179,1.164 15.43,0L15.717,0C18.938,0,20.728,2.649,21.027,5.855L21.574,11.712 0,11.712 0.545,5.855C0.844,2.649,2.634,0,5.854,0" Fill="White" Height="11.712" Canvas.Left="0" Canvas.Top="17.817" Width="21.574"/>
            						<Path Data="M5.312,0C8.247,0 10.624,2.681 10.624,5.987 10.624,9.294 8.247,11.975 5.312,11.975 2.377,11.975 0,9.294 0,5.987 0,2.681 2.377,0 5.312,0" Fill="White" Height="11.975" Canvas.Left="20.077" Canvas.Top="3" Width="10.624"/>
            						<Path Data="M3.272,0L3.558,0C4.81,1.163 6.432,1.866 8.203,1.866 9.975,1.866 11.596,1.163 12.848,0L13.133,0C16.355,0,18.145,2.649,18.444,5.855L18.99,11.712 5.895,11.712 5.6,8.537C5.274,5.051 3.372,1.928 0,1.226 0.839,0.459 1.932,0 3.272,0" Fill="White" Height="11.712" Canvas.Left="17.186" Canvas.Top="14.973" Width="18.99"/>
            						<Path Data="M5.312,0C8.247,0 10.624,2.681 10.624,5.987 10.624,9.294 8.247,11.975 5.312,11.975 2.377,11.975 0,9.294 0,5.987 0,2.681 2.377,0 5.312,0" Fill="White" Height="11.975" Canvas.Left="35.077" Canvas.Top="0" Width="10.624"/>
            						<Path Data="M3.272,0L3.558,0C4.81,1.163 6.432,1.866 8.203,1.866 9.975,1.866 11.596,1.163 12.848,0L13.133,0C16.355,0,18.145,2.649,18.444,5.855L18.99,11.712 5.895,11.712 5.6,8.537C5.274,5.051 3.372,1.928 0,1.226 0.839,0.459 1.932,0 3.272,0" Fill="White" Height="11.712" Canvas.Left="32.186" Canvas.Top="11.973" Width="18.99"/>
            						<Path Data="M5.312,0C8.245,0 10.624,2.681 10.624,5.987 10.624,9.294 8.245,11.975 5.312,11.975 2.376,11.975 -0.001,9.294 -0.001,5.987 -0.001,2.681 2.376,0 5.312,0" Fill="White" Height="11.975" Canvas.Left="5.475" Canvas.Top="5.845" Width="10.624"/>
            					</Canvas>
            					<Ellipse x:Name="ellipse" Fill="White" Height="Auto" Width="Auto" RenderTransformOrigin="0.5,0.5" Opacity="0" Margin="13.157,13.692,115.839,57.304">
            						<Ellipse.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Ellipse.RenderTransform>
            					</Ellipse>
            					<Ellipse x:Name="ellipse_Copy" Fill="White" Height="Auto" Width="Auto" RenderTransformOrigin="0.5,0.5" Opacity="0" Margin="13.157,13.692,115.839,57.304">
            						<Ellipse.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Ellipse.RenderTransform>
            					</Ellipse>
            					<Ellipse x:Name="ellipse_Copy1" Fill="White" Height="Auto" Width="Auto" RenderTransformOrigin="0.5,0.5" Opacity="0" Margin="13.157,13.692,115.839,57.304">
            						<Ellipse.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Ellipse.RenderTransform>
            					</Ellipse>
            					<Ellipse x:Name="ellipse_Copy2" Fill="White" Height="Auto" Width="Auto" RenderTransformOrigin="0.5,0.5" Opacity="0" Margin="13.157,13.692,115.839,57.304">
            						<Ellipse.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Ellipse.RenderTransform>
            					</Ellipse>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<EventTrigger RoutedEvent="ToggleButton.Checked"/>
            					<Trigger Property="IsChecked" Value="True">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="OnChecked1_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="OnChecked1_BeginStoryboard" Storyboard="{StaticResource OnChecked1}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>

          
            <Style x:Key="lableUserNotification" TargetType="{x:Type Label}">
            	<Setter Property="Foreground" Value="Black"/>
            	<Setter Property="Background" Value="White"/>
            	<Setter Property="Padding" Value="5"/>
            	<Setter Property="HorizontalContentAlignment" Value="Left"/>
            	<Setter Property="VerticalContentAlignment" Value="Top"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Label}" >
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="poll-checked" RepeatBehavior="Forever" AutoReverse="True"/>
            					<Storyboard x:Key="correctans">
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            							<EasingColorKeyFrame KeyTime="0" Value="#FF00FF05"/>
            						</ColorAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid Height="Auto" Width="Auto">
            					<Path x:Name="path" Data="F1M15.492,32.882L17.927,30.507C25.544,29.447 31.406,23.07 31.406,15.338 31.406,6.867 24.377,0 15.703,0 7.03,0 0,6.867 0,15.338 0,22.899 5.609,29.169 12.982,30.431z" Height="40.757" Width="38.928" Margin="-1.5,-1.57,-0.52,-8.805" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Fill="#FFFFF200">
            						<Path.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Path.RenderTransform>
            					</Path>
            					<ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" OpacityMask="Black" RenderTransformOrigin="0.5,0.5" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8.395,6.192,8.395,1.192">
            						<ContentPresenter.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</ContentPresenter.RenderTransform>
            					</ContentPresenter>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Uid" Value="1">
            						<Trigger.ExitActions>
            							<RemoveStoryboard BeginStoryboardName="poll_checked_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="poll_checked_BeginStoryboard" Storyboard="{StaticResource correctans}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            	<Setter Property="FontFamily" Value="/ISILS Essential 5.0;component/Fonts/#Melbourne"/>
            	<Setter Property="FontSize" Value="21.333"/>
            	<Setter Property="FontWeight" Value="Bold"/>
            </Style>
            <Style x:Key="UserTemplate" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Grid>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="21.871,46.945,21.871,31.094" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="opengroup" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="checked" RepeatBehavior="Forever">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="-10.93"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="9.519"/>
            						</DoubleAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path4">
            							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
            							<EasingColorKeyFrame KeyTime="0:0:1.6" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="10.93"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="9.872"/>
            						</DoubleAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path5">
            							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
            							<EasingColorKeyFrame KeyTime="0:0:1.6" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FF9C908C">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver"/>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FFF05A28"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8.052,0,0,8.052" Opacity="0.5"/>
            					<Canvas x:Name="OPEN_GROUP" Height="21.859" Width="32.789" Margin="0,9.335,12.003,0" HorizontalAlignment="Right" VerticalAlignment="Top">
            						<Path x:Name="path" Data="F1M9.919,4.959C9.919,7.698 7.697,9.919 4.958,9.919 2.22,9.919 0,7.698 0,4.959 0,2.221 2.22,0 4.958,0 7.697,0 9.919,2.221 9.919,4.959" Fill="White" Height="9.919" Canvas.Left="0" Canvas.Top="9.618" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path3" Data="F1M9.918,4.959C9.918,7.698 7.697,9.919 4.959,9.919 2.221,9.919 0,7.698 0,4.959 0,2.221 2.221,0 4.959,0 7.697,0 9.918,2.221 9.918,4.959" Fill="White" Height="9.919" Canvas.Left="22.057" Canvas.Top="9.618" Width="9.918" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path Data="F1M9.919,4.959C9.919,7.698 7.698,9.918 4.959,9.918 2.22,9.918 0,7.698 0,4.959 0,2.22 2.22,0 4.959,0 7.698,0 9.919,2.22 9.919,4.959" Fill="White" Height="9.918" Canvas.Left="11.071" Canvas.Top="0" Width="9.919"/>
            						<Path x:Name="path1" Data="F1M15.843,1.346L1.347,15.842 0,14.496 14.495,-0.001z" Fill="White" Height="15.843" Canvas.Left="3.15" Canvas.Top="1.997" Width="15.843" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path2" Data="F1M14.495,15.843L0,1.347 1.346,0 15.842,14.496z" Fill="White" Height="15.843" Canvas.Left="14.128" Canvas.Top="2.505" Width="15.842" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path4" Data="F1M9.919,4.959C9.919,7.698 7.698,9.918 4.959,9.918 2.22,9.918 0,7.698 0,4.959 0,2.22 2.22,0 4.959,0 7.698,0 9.919,2.22 9.919,4.959" Fill="White" Height="9.918" Canvas.Left="11.071" Canvas.Top="0" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path5" Data="F1M9.919,4.959C9.919,7.698 7.698,9.918 4.959,9.918 2.22,9.918 0,7.698 0,4.959 0,2.22 2.22,0 4.959,0 7.698,0 9.919,2.22 9.919,4.959" Fill="White" Height="9.918" Canvas.Left="11.071" Canvas.Top="0" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsChecked" Value="True">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="checked_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="checked_BeginStoryboard" Storyboard="{StaticResource checked}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="UserIcon" TargetType="{x:Type ToggleButton}">

                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Button.Disabled.Background}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="checked" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FFAEFF00"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-2.667"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-2.667"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-0.999"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-0.999"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1.209"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1.209"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ellipse_Copy">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-488.337"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse_Copy">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-2.667"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse_Copy">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-1.332"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-0.999"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FFAEFF00"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_Copy">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="openhouse" RepeatBehavior="Forever" AutoReverse="True">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FFA24198"/>
                                        <EasingColorKeyFrame KeyTime="0:0:1.115" Value="#FFFF00E5"/>
                                        <EasingColorKeyFrame KeyTime="0:0:2.3" Value="#FFA24198"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="openGroup" AutoReverse="True" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FFF05A28"/>
                                        <EasingColorKeyFrame KeyTime="0:0:1" Value="Red"/>
                                        <EasingColorKeyFrame KeyTime="0:0:2" Value="#FFF05A28"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="closedGroup" AutoReverse="True" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF1B75BB"/>
                                        <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF00DCFF"/>
                                        <EasingColorKeyFrame KeyTime="0:0:2" Value="#FF1B75BB"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="onetoone1" AutoReverse="True" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF009344"/>
                                        <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF00FF76"/>
                                        <EasingColorKeyFrame KeyTime="0:0:2" Value="#FF009344"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="grid" Background="#FF7C7F7D">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-12,0,-40" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Canvas x:Name="USER" Height="42.271" Width="35.112" Margin="27.444,2,27.444,0" VerticalAlignment="Top" HorizontalAlignment="Center">
                                    <Path Data="M5.004,0C7.766,0 10.006,2.466 10.006,5.509 10.006,8.551 7.766,11.018 5.004,11.018 2.24,11.018 0,8.551 0,5.509 0,2.466 2.24,0 5.004,0" Fill="White" Height="19.048" Canvas.Left="8.914" Canvas.Top="4.253" Width="17.298" Stretch="Fill"/>
                                    <Path Data="M5.515,0L5.786,0C6.963,1.07 8.492,1.717 10.16,1.717 11.827,1.717 13.354,1.07 14.534,0L14.803,0C17.836,0,19.521,2.437,19.804,5.387L20.317,10.773 0,10.773 0.516,5.387C0.798,2.437,2.484,0,5.515,0" Fill="White" Height="18.624" Canvas.Left="0" Canvas.Top="23" Width="35.124" Stretch="Fill"/>
                                    <Ellipse x:Name="ellipse" Fill="{x:Null}" Height="22.333" Canvas.Left="9.056" Canvas.Top="2.92" Width="22.333" Stroke="Black" RenderTransformOrigin="0.5,0.5" Clip="M-0.166,10.5 L23.5,10.5 L23.5,23.5 L-0.166,23.5 z" Opacity="0">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <Ellipse x:Name="ellipse_Copy" Fill="{x:Null}" Height="22.333" Canvas.Left="9.056" Canvas.Top="2.92" Width="22.333" Stroke="White" RenderTransformOrigin="0.5,0.5" Clip="M-0.166,10.5 L23.5,10.5 L23.5,23.5 L-0.166,23.5 z" Opacity="0">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="closedGroup_BeginStoryboard"/>
                                    </MultiTrigger.ExitActions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="closedGroup_BeginStoryboard" Storyboard="{StaticResource closedGroup}"/>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Uid" Value="3"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Uid" Value="1"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="openhouse_BeginStoryboard" Storyboard="{StaticResource openhouse}"/>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="openhouse_BeginStoryboard"/>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="openGroup_BeginStoryboard"/>
                                    </MultiTrigger.ExitActions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="openGroup_BeginStoryboard" Storyboard="{StaticResource openGroup}"/>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Uid" Value="2"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="onetoone1_BeginStoryboard"/>
                                    </MultiTrigger.ExitActions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="onetoone1_BeginStoryboard" Storyboard="{StaticResource onetoone1}"/>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Uid" Value="4"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="checked_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="checked_BeginStoryboard" Storyboard="{StaticResource checked}"/>
                                    </Trigger.EnterActions>
                                    <Setter Property="Opacity" TargetName="ellipse_Copy" Value="0"/>
                                    <Setter Property="Opacity" TargetName="ellipse" Value="0"/>
                                </Trigger>
                                <Trigger Property="Button.IsDefaulted" Value="true"/>
                                <Trigger Property="IsMouseOver" Value="true"/>
                                <Trigger Property="IsPressed" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontFamily" Value="/ISILS Essential 5.0;component/Fonts/#Melbourne"/>
                <Setter Property="FontSize" Value="29.333"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>




            <Style x:Key="FocusVisual">
            	<Setter Property="Control.Template">
            		<Setter.Value>
            			<ControlTemplate>
            				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <Style x:Key="btnBrowserB-F" TargetType="{x:Type Button}">

            	<Setter Property="Background" Value="#FFF0B21D"/>
            	<Setter Property="BorderBrush" Value="{x:Null}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Path x:Name="path" Data="F1M0.435,7.976L7.969,0.446C8.564,-0.149 9.527,-0.149 10.123,0.446 10.716,1.042 10.716,2.003 10.123,2.599L3.611,9.109 10.123,15.621C10.716,16.215 10.716,17.182 10.123,17.777 9.531,18.372 8.564,18.367 7.969,17.777L0.439,10.242C0.13,9.933 -0.01,9.526 0.002,9.122 -0.017,8.709 0.12,8.291 0.435,7.976" Fill="#FF0094A0" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" />
            				</Border>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsDefaulted" Value="true">
            						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
            						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
            					</Trigger>
            					<Trigger Property="IsPressed" Value="true">
            						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
            						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
            						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <ControlTemplate x:Key="brnBrowserB-F" TargetType="{x:Type Button}">
            	<Grid>
            		<Grid.RowDefinitions>
            			<RowDefinition Height="7*"/>
            			<RowDefinition Height="33*"/>
            		</Grid.RowDefinitions>
            		<VisualStateManager.VisualStateGroups>
            			<VisualStateGroup x:Name="CommonStates">
            				<VisualStateGroup.Transitions>
            					<VisualTransition GeneratedDuration="0:0:0.3" To="MouseOver">
            						<Storyboard>
            							<ColorAnimation Duration="0:0:0.3" To="#FFF0B21D" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
            							<ColorAnimation Duration="0:0:0.3" To="sc#0, 0, 0, 0" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1"/>
            							<ColorAnimation Duration="0:0:0.3" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1_Copy" From="sc#0, 0, 0.296138257, 0.3515326"/>
            							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path1">
            								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="13.334"/>
            							</DoubleAnimationUsingKeyFrames>
            							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path1_Copy">
            								<EasingDoubleKeyFrame KeyTime="0" Value="-13.334"/>
            								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            							</DoubleAnimationUsingKeyFrames>
            						</Storyboard>
            					</VisualTransition>
            				</VisualStateGroup.Transitions>
            				<VisualState x:Name="Normal"/>
            				<VisualState x:Name="MouseOver">
            					<Storyboard>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            							<EasingColorKeyFrame KeyTime="0" Value="#FFF0B21D"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
            							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1_Copy">
            							<EasingColorKeyFrame KeyTime="0" Value="Black"/>
            						</ColorAnimationUsingKeyFrames>
            					</Storyboard>
            				</VisualState>
            				<VisualState x:Name="Pressed"/>
            				<VisualState x:Name="Disabled"/>
            			</VisualStateGroup>
            		</VisualStateManager.VisualStateGroups>
            		<Path x:Name="path" Data="F1M40.229,40.229L0,40.229 0,0 40.229,0z" Fill="White" Height="Auto" Margin="0,0,-0.229,0.39" Stretch="Fill" Grid.RowSpan="2"/>
            		<Path x:Name="path1" Data="F1M0.435,7.976L7.969,0.446C8.564,-0.149 9.527,-0.149 10.123,0.446 10.716,1.042 10.716,2.003 10.123,2.599L3.611,9.109 10.123,15.621C10.716,16.215 10.716,17.182 10.123,17.777 9.531,18.372 8.564,18.367 7.969,17.777L0.439,10.242C0.13,9.933 -0.01,9.526 0.002,9.122 -0.017,8.709 0.12,8.291 0.435,7.976" Fill="#FF0094A0" Margin="14.83,4.413,14.601,0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1">
            			<Path.RenderTransform>
            				<TransformGroup>
            					<ScaleTransform/>
            					<SkewTransform/>
            					<RotateTransform Angle="180"/>
            					<TranslateTransform/>
            				</TransformGroup>
            			</Path.RenderTransform>
            		</Path>
            		<Path x:Name="path1_Copy" Data="F1M0.435,7.976L7.969,0.446C8.564,-0.149 9.527,-0.149 10.123,0.446 10.716,1.042 10.716,2.003 10.123,2.599L3.611,9.109 10.123,15.621C10.716,16.215 10.716,17.182 10.123,17.777 9.531,18.372 8.564,18.367 7.969,17.777L0.439,10.242C0.13,9.933 -0.01,9.526 0.002,9.122 -0.017,8.709 0.12,8.291 0.435,7.976" Fill="#FF0094A0" Margin="14.83,4.413,14.601,0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1">
            			<Path.RenderTransform>
            				<TransformGroup>
            					<ScaleTransform/>
            					<SkewTransform/>
            					<RotateTransform Angle="180"/>
            					<TranslateTransform/>
            				</TransformGroup>
            			</Path.RenderTransform>
            		</Path>
            	</Grid>
            </ControlTemplate>

            <Style x:Key="BROWSERTEXXT" TargetType="{x:Type TextBox}">
            	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        
            	<Setter Property="AllowDrop" Value="true"/>
            	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type TextBox}">
            				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver"/>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="Disabled"/>
            							<VisualState x:Name="ReadOnly"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="#FFF0B21D"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Grid>
            						<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="50.659,9.22,0,9.22"/>
            						<Path x:Name="path" Data="F1M12.733,13.315C10.38,14.417 8.414,16.114 6.99,18.188 7.708,18.368 8.458,18.463 9.232,18.463 10.626,18.463 11.944,18.153 13.128,17.601 13.319,16.67 13.419,15.709 13.419,14.722 13.419,14.366 13.403,14.014 13.376,13.665 13.139,13.588 12.922,13.469 12.733,13.315 M15.429,2.389C13.95,2.532 12.537,2.903 11.221,3.461 11.229,3.526 11.231,3.591 11.231,3.658 11.231,3.968 11.158,4.26 11.03,4.521 12.344,6.064 13.366,7.862 14.009,9.831 14.808,9.845 15.491,10.335 15.785,11.029 16.673,10.938 17.539,10.769 18.372,10.524 18.431,10.102 18.464,9.67 18.464,9.231 18.464,6.518 17.294,4.078 15.429,2.389 M11.745,12.266C9.466,11.888 7.353,11.018 5.514,9.773 5.215,9.955 4.865,10.064 4.489,10.064 4.351,10.064 4.216,10.048 4.086,10.022 3.206,11.69 2.643,13.552 2.482,15.526 3.36,16.468 4.433,17.228 5.637,17.738 7.133,15.438 9.225,13.535 11.745,12.266 M14.753,13.596C14.78,13.968 14.794,14.343 14.794,14.722 14.794,15.389 14.752,16.045 14.67,16.69 16.237,15.546 17.428,13.923 18.03,12.036 17.317,12.208 16.587,12.331 15.841,12.402 15.667,12.94 15.266,13.375 14.753,13.596 M12.205,10.945C12.327,10.691 12.501,10.465 12.715,10.286 12.135,8.503 11.217,6.871 10.034,5.467 9.799,5.567 9.54,5.622 9.268,5.622 8.841,5.622 8.448,5.485 8.127,5.254 7.415,5.795 6.756,6.402 6.157,7.065 6.344,7.365 6.453,7.719 6.453,8.099 6.453,8.304 6.421,8.502 6.363,8.688 8.086,9.838 10.068,10.627 12.205,10.945 M9.268,1.694C9.786,1.694 10.256,1.896 10.608,2.225 11.633,1.784 12.712,1.445 13.835,1.23 12.479,0.449 10.909,0 9.232,0 8.089,0 6.996,0.209 5.985,0.589 6.787,0.985 7.551,1.447 8.27,1.968 8.563,1.794 8.903,1.694 9.268,1.694 M2.525,8.099C2.525,7.823 2.582,7.561 2.685,7.323 2.054,6.63 1.483,5.884 0.983,5.087 0.356,6.334 0,7.741 0,9.231 0,10.958 0.475,12.573 1.299,13.955 1.594,12.294 2.153,10.724 2.926,9.285 2.675,8.955 2.525,8.545 2.525,8.099 M4.489,6.135C4.691,6.135 4.885,6.165 5.068,6.222 5.76,5.446 6.527,4.74 7.358,4.114 7.324,3.968 7.303,3.815 7.303,3.658 7.303,3.44 7.34,3.232 7.405,3.036 6.475,2.368 5.462,1.808 4.385,1.375 3.376,1.998 2.496,2.812 1.794,3.765 2.315,4.687 2.934,5.548 3.638,6.331 3.896,6.206 4.184,6.135 4.489,6.135" Fill="#FF0B95A1" Height="Auto" Width="Auto" Margin="23.332,10.768,0,10.768" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            					</Grid>
            				</Border>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true">
            						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
            					</Trigger>
            					<Trigger Property="IsKeyboardFocused" Value="true">
            						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="PlayerPlaylist" TargetType="{x:Type Button}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Grid Width="Auto">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates1">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.4" To="MouseOver"/>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal1"/>
            							<VisualState x:Name="MouseOver1">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF6B6868"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF6B6868"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF6B6868"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed1"/>
            							<VisualState x:Name="Disabled1"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07B4BB"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07B4BB"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07B4BB"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Rectangle Fill="#FF231F20" Height="Auto" Width="Auto"/>
            					<Path x:Name="path" Data="F1M0,0L18.337,0 18.337,4.098 0,4.098z" Fill="White" Height="Auto" Width="Auto" Margin="6.9,23.088,-6.9,-7.088"/>
            					<Path x:Name="path1" Data="F1M0,0L18.337,0 18.337,4.098 0,4.098z" Fill="White" Height="Auto" Width="Auto" Margin="6.9,15.088,-6.9,0.912"/>
            					<Path x:Name="path2" Data="F1M0,0L18.337,0 18.337,4.098 0,4.098z" Fill="White" Height="Auto" Width="Auto" Margin="6.9,7.088,-6.9,8.912"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="PlayerPlay" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Grid>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07B4BB"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07B4BB"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
            										<EasingColorKeyFrame KeyTime="0" Value="White"/>
            									</ColorAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07B4BB"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualState x:Name="Checked"/>
            							<VisualState x:Name="Unchecked">
            								<Storyboard>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path3">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            									</ObjectAnimationUsingKeyFrames>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            									</ObjectAnimationUsingKeyFrames>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Rectangle Fill="Black" HorizontalAlignment="Stretch" Height="Auto" Margin="0" Stroke="{x:Null}" VerticalAlignment="Stretch"/>
            					<Path x:Name="path2" Data="F1M23.222,43.712C11.907,43.712 2.732,34.538 2.732,23.222 2.732,11.905 11.907,2.732 23.222,2.732 34.539,2.732 43.712,11.905 43.712,23.222 43.712,34.538 34.539,43.712 23.222,43.712 M23.222,0C10.398,0 0,10.397 0,23.222 0,36.047 10.398,46.444 23.222,46.444 36.048,46.444 46.445,36.047 46.445,23.222 46.445,10.397 36.048,0 23.222,0" Fill="White" Height="Auto" Width="Auto" Margin="1.952,1.598,1.603,1.958"/>
            					<Path x:Name="path" Data="F1M4.098,16.165L0,16.165 0,0 4.098,0z" Fill="White" Height="Auto" Width="Auto" Margin="27.125,16.737,18.777,17.098"/>
            					<Path x:Name="path1" Data="F1M4.098,16.165L0,16.165 0,0 4.098,0z" Fill="White" Height="Auto" Width="Auto" Margin="19.125,16.737,26.777,17.098"/>
            					<Path x:Name="path3" Data="M22.45,12.65 L22.45,33.65 32.949999,23.149999 z" Fill="White" HorizontalAlignment="Left" Height="17.8" Margin="20.45,15.85,0,0" Stretch="Fill" VerticalAlignment="Top" Width="12.5" Visibility="Hidden"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="playerrec" TargetType="{x:Type ToggleButton}">
 
            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="OnChecked1"  RepeatBehavior="Forever">
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
            							<EasingColorKeyFrame KeyTime="0:0:1" Value="#FF22F18F"/>
            							<EasingColorKeyFrame KeyTime="0:0:2" Value="#FFF15822"/>
            						</ColorAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
            										<EasingColorKeyFrame KeyTime="0" Value="White"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.3" To="Checked"/>
            								<VisualTransition From="Checked" GeneratedDuration="0:0:0.3"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusY)" Storyboard.TargetName="rectangle">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1.233"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="rectangle">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1.233"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Rectangle Fill="#FF231F20"/>
            					<Path x:Name="path2" Data="F1M23.222,43.712C11.907,43.712 2.732,34.538 2.732,23.222 2.732,11.905 11.907,2.732 23.222,2.732 34.539,2.732 43.712,11.905 43.712,23.222 43.712,34.538 34.539,43.712 23.222,43.712 M23.222,0C10.398,0 0,10.397 0,23.222 0,36.047 10.398,46.444 23.222,46.444 36.048,46.444 46.445,36.047 46.445,23.222 46.445,10.397 36.048,0 23.222,0" Fill="White" Height="Auto" Width="Auto" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            					<Rectangle x:Name="rectangle" Fill="#FFF15822" HorizontalAlignment="Center" Height="15" VerticalAlignment="Center" Width="15" RadiusY="14.5" RadiusX="14.5"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            					<EventTrigger RoutedEvent="ToggleButton.Checked">
            						<BeginStoryboard x:Name="OnChecked1_BeginStoryboard" Storyboard="{StaticResource OnChecked1}"/>
            					</EventTrigger>
            					<EventTrigger RoutedEvent="ToggleButton.Unchecked">
            						<StopStoryboard BeginStoryboardName="OnChecked1_BeginStoryboard"/>
            					</EventTrigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
            <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
            <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
            <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
            <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
            <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            	<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            		<Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            	</Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            	<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            		<Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            	</Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6"/>
            <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            	<Setter Property="OverridesDefaultStyle" Value="true"/>
            	<Setter Property="Background" Value="Transparent"/>
            	<Setter Property="Focusable" Value="false"/>
            	<Setter Property="IsTabStop" Value="false"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type RepeatButton}">
            				<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            	<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            		<Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            	</Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            	<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            		<Grid>
            			<Grid.RowDefinitions>
            				<RowDefinition Height="Auto"/>
            				<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
            				<RowDefinition Height="Auto"/>
            			</Grid.RowDefinitions>
            			<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="-0.133,10.735,0.133,-14.735" Placement="Top" Grid.Row="2" Visibility="Collapsed" VerticalAlignment="Center"/>
            			<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="-0.133,16.735,0.133,-20.735" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" VerticalAlignment="Center"/>
            			<Border x:Name="TrackBackground" BorderThickness="2,2,2,12" Background="{DynamicResource Button.Pressed.Border}" Height="4.0" Margin="4.867,13.735,5.133,-17.735" Grid.Row="2" VerticalAlignment="Center">
            				<Canvas Margin="-6,-1">
            					<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
            				</Canvas>
            			</Border>
            			<Track x:Name="PART_Track" Grid.Row="2" VerticalAlignment="Center" Margin="-0.133,13.735,0.133,-17.736" OpacityMask="Black" Height="15">
            				<Track.DecreaseRepeatButton>
            					<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}">
            						<RepeatButton.Background>
            							<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0" SpreadMethod="Pad">
            								<GradientStop Color="#FF007484" Offset="0"/>
            								<GradientStop Color="#FF00B4BB" Offset="1"/>
            							</LinearGradientBrush>
            						</RepeatButton.Background>
            					</RepeatButton>
            				</Track.DecreaseRepeatButton>
            				<Track.IncreaseRepeatButton>
            					<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" Background="#FF6F6A6A"/>
            				</Track.IncreaseRepeatButton>
            				<Track.Thumb>
            					<Thumb x:Name="Thumb" Focusable="False" Height="Auto" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Stretch" Width="11" Foreground="#FFEB2C2C"/>
            				</Track.Thumb>
            			</Track>
            		</Grid>
            	</Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement" Value="TopLeft">
                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                        <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                        <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="BottomRight">
                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                        <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="Both">
                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsSelectionRangeEnabled" Value="true">
                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
            	<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            		<Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            	</Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
            	<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            		<Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            	</Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
            	<Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            		<Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            	</Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                        <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
            	<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            		<Grid>
            			<Grid.ColumnDefinitions>
            				<ColumnDefinition Width="Auto"/>
            				<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
            				<ColumnDefinition Width="Auto"/>
            			</Grid.ColumnDefinitions>
            			<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
            			<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
            			<Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
            				<Canvas Margin="-1,-6">
            					<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
            				</Canvas>
            			</Border>
            			<Track x:Name="PART_Track" Grid.Column="1">
            				<Track.DecreaseRepeatButton>
            					<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
            				</Track.DecreaseRepeatButton>
            				<Track.IncreaseRepeatButton>
            					<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
            				</Track.IncreaseRepeatButton>
            				<Track.Thumb>
            					<Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
            				</Track.Thumb>
            			</Track>
            		</Grid>
            	</Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="TickPlacement" Value="TopLeft">
                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                        <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                        <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="BottomRight">
                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                        <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                        <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                    </Trigger>
                    <Trigger Property="TickPlacement" Value="Both">
                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsSelectionRangeEnabled" Value="true">
                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="true">
                        <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="playerSlider" TargetType="{x:Type Slider}">
            	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            	<Setter Property="Background" Value="Transparent"/>
            	<Setter Property="BorderBrush" Value="Transparent"/>
            	<Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            	<Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="MyCustomStyleForSlider" TargetType="{x:Type Slider}">
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Slider}">
            				<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            					<Grid>
            						<Grid.RowDefinitions>
            							<RowDefinition Height="Auto"/>
            							<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
            							<RowDefinition Height="Auto"/>
            						</Grid.RowDefinitions>
            						<TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
            						<TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
            						<Border x:Name="TrackBackground"  
            							BorderThickness="1" CornerRadius="1"
            							Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
            							<Canvas Margin="-6,-1">
            								<Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
            									Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
            									Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
            									StrokeThickness="1.0"/>
            							</Canvas>
            						</Border>
            						<Track x:Name="PART_Track" Grid.Row="1">
            							<Track.DecreaseRepeatButton>
            								<RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
            							</Track.DecreaseRepeatButton>
            							<Track.IncreaseRepeatButton>
            								<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Background="#FFD63B3B"/>
            							</Track.IncreaseRepeatButton>
            							<Track.Thumb>
            								<Thumb x:Name="Thumb" Background="Black"/>
            							</Track.Thumb>
            						</Track>
            					</Grid>
            				</Border>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="SliderStylePlayer" TargetType="{x:Type Slider}">
            	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            	<Setter Property="Background" Value="Transparent"/>
            	<Setter Property="BorderBrush" Value="Transparent"/>
            	<Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            	<Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="voltoggle" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Grid>
            					<Rectangle Fill="#FF7C2A2A" Height="Auto" Width="Auto"/>
            					<Path Data="F1M0,1L0.994,1 0.994,0 0,0z" Fill="White" Margin="20.745,14.083,13.085,14.083" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            					<Path Data="F1M4,1.047L3,1.047 3,2.041 2,2.041 2,2.982 1,2.982 1,4 0,4 0,7.01 1,7.01 1,8.028 2,8.028 2,8.969 3,8.969 3,9.963 4,9.963 4,11.009 4.993,11.009 4.993,0 4,0z" Fill="White" Margin="0" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            					<Path Data="F1M0,3.01L0.994,3.01 0.994,0 0,0z" Fill="White" Margin="13.281,13.078,20.549,13.078" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Grid>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.3" To="Checked"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Rectangle Fill="#FF231F20"/>
            					<Path Data="F1M0,1L0.994,1 0.994,0 0,0z" Fill="White" Margin="28.334,13.767,9.134,15.094" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Width="2.532" Height="2.139"/>
            					<Path Data="F1M0,3.01L0.994,3.01 0.994,0 0,0z" Fill="White" Margin="9.33,11.616,28.138,12.944" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill" Width="2.532" Height="6.44"/>
            					<Path Data="M17.03125,13.09375 L21.93775,8.7185 22.875845,8.7185 22.938351,20.937698 21.938664,20.905948 17.000244,16.468376" Fill="White" HorizontalAlignment="Left" Height="23.317" Margin="14.186,3.17,0,0" Stretch="Fill" VerticalAlignment="Top" Width="11.329"/>
            					<Path x:Name="path" Data="M13.375,23 L30.468779,5.9062214" Fill="Red" HorizontalAlignment="Left" Height="17.094" Margin="13.375,5.906,0,0" Stretch="Fill" VerticalAlignment="Top" Width="17.094" StrokeThickness="2" Stroke="Red" Opacity="0"/>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="BROWSEEDEKSTOP" TargetType="{x:Type Button}">
         
            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type Button}">
            				<Grid>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
            									<Storyboard>
            										<ColorAnimation Duration="0:0:0.32" To="#FFFBAD17" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
            										<DoubleAnimation BeginTime="0:0:0.18" Duration="0:0:0.32" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP_Copy"/>
            										<DoubleAnimation Duration="0:0:0.32" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP"/>
            										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="DESKTIOP">
            											<DiscreteObjectKeyFrame KeyTime="0:0:0.32" Value="{x:Static VerticalAlignment.Center}"/>
            										</ObjectAnimationUsingKeyFrames>
            										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DESKTIOP_Copy">
            											<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-7.625"/>
            										</DoubleAnimationUsingKeyFrames>
            										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DESKTIOP">
            											<EasingDoubleKeyFrame KeyTime="0:0:0.32" Value="-8.75"/>
            										</DoubleAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
            										<EasingColorKeyFrame KeyTime="0" Value="#FFFBAD17"/>
            									</ColorAnimationUsingKeyFrames>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DESKTIOP_Copy">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            									</ObjectAnimationUsingKeyFrames>
            									<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="DESKTIOP_Copy">
            										<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            									</ThicknessAnimationUsingKeyFrames>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="DESKTIOP">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Top}"/>
            									</ObjectAnimationUsingKeyFrames>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DESKTIOP">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            									</ObjectAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Rectangle x:Name="rectangle" Fill="#FF00A79D" Stroke="{x:Null}"/>
            					<Canvas x:Name="DESKTIOP" Height="22.7" Width="29.9" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Rectangle Fill="White" HorizontalAlignment="Left" Height="12.508" Margin="0" VerticalAlignment="Top" Width="4.627" Canvas.Left="22.732" Canvas.Top="2.856"/>
            						<Path Data="M1.974,1.74L28.37,1.74 28.37,16.48 1.974,16.48z M7.974,21.371L12.359,21.371 12.359,19.029 0,19.029 0,0 30.346,0 30.346,19.029 17.986,19.029 17.986,21.371 22.369,21.371 22.369,23.162 7.974,23.162z" Fill="White" Height="23.162" Canvas.Left="0" Canvas.Top="0" Width="30.346"/>
            					</Canvas>
            					<Canvas x:Name="DESKTIOP_Copy" Height="22.7" Width="29.9" Margin="5.05,18.15,5.05,-0.85" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Visible" Opacity="0" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="M1.974,1.74L28.37,1.74 28.37,16.48 1.974,16.48z M7.974,21.371L12.359,21.371 12.359,19.029 0,19.029 0,0 30.346,0 30.346,19.029 17.986,19.029 17.986,21.371 22.369,21.371 22.369,23.162 7.974,23.162z" Fill="White" Height="23.162" Canvas.Left="0" Canvas.Top="0" Width="30.346"/>
            						<Rectangle Fill="White" HorizontalAlignment="Left" Height="12.508" Margin="0" VerticalAlignment="Top" Width="4.627" Canvas.Left="22.218" Canvas.Top="2.913"/>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnPa" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="OnMouseEnter1">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="HEADPHONE1">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.144"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="HEADPHONE1">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.144"/>
            						</DoubleAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
            							<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFFFA200"/>
            						</ColorAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid>
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="label">
            											<EasingThicknessKeyFrame KeyTime="0" Value="0,0,148,3.891"/>
            										</ThicknessAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            								<VisualTransition From="Unchecked" GeneratedDuration="0:0:0.4" To="Checked">
            									<Storyboard>
            										<DoubleAnimation Duration="0:0:0.4" To="2.034" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle"/>
            										<DoubleAnimation Duration="0:0:0.4" To="-46.559" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle"/>
            										<ColorAnimation Duration="0:0:0.4" To="#FFB4A583" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1"/>
            										<DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="label1"/>
            										<ColorAnimation Duration="0:0:0.4" To="#FFFFA800" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
            										<DoubleAnimation Duration="0:0:0.4" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="label"/>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="pA1">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0,12.328,125,12.328"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="HEADPHONE1">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0,10.991,222,16.337"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<DoubleAnimation Duration="0:0:0.4" To="20.605" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="HEADPHONE1"/>
            										<DoubleAnimation Duration="0:0:0.4" To="-5.569" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="pA1"/>
            									</Storyboard>
            								</VisualTransition>
            								<VisualTransition From="Checked" GeneratedDuration="0:0:0.4" To="Unchecked">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="pA1">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0,12.328,23,12.328"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="HEADPHONE1">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0,10.991,101.15,16.337"/>
            										</ThicknessAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
            										<EasingDoubleKeyFrame KeyTime="0" Value="2.034"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
            										<EasingDoubleKeyFrame KeyTime="0" Value="-46.559"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="HEADPHONE1">
            										<EasingDoubleKeyFrame KeyTime="0" Value="20.605"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
            										<EasingColorKeyFrame KeyTime="0" Value="#FFB4A583"/>
            									</ColorAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="label1">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
            										<EasingColorKeyFrame KeyTime="0" Value="#FFFFA800"/>
            									</ColorAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="label">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="pA1">
            										<EasingDoubleKeyFrame KeyTime="0" Value="-5.569"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="pA1">
            										<EasingThicknessKeyFrame KeyTime="0" Value="0,12.328,120,12.328"/>
            									</ThicknessAnimationUsingKeyFrames>
            									<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="HEADPHONE1">
            										<EasingThicknessKeyFrame KeyTime="0" Value="0,10.991,222,16.337"/>
            									</ThicknessAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CommonStates" />
            					</VisualStateManager.VisualStateGroups>

            					<Rectangle x:Name="rectangle1" Fill="#FFFFA800" Stroke="{x:Null}" StrokeThickness="0"/>
            					<Rectangle x:Name="rectangle" Fill="#FFB4A583" Stroke="{x:Null}" StrokeThickness="0" HorizontalAlignment="Right" Width="90" RenderTransformOrigin="0.5,0.5">
            						<Rectangle.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Rectangle.RenderTransform>
            					</Rectangle>
            					<Canvas x:Name="pA1" Height="50.344" Width="40.098" Margin="0,12.328,23.948,12.328" VerticalAlignment="Center" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="F1M8.302,21.665C8.867,21.665 9.325,22.124 9.325,22.688 9.325,23.251 8.867,23.71 8.302,23.71 7.738,23.71 7.281,23.251 7.281,22.688 7.281,22.124 7.738,21.665 8.302,21.665 M8.302,18.601C8.867,18.601 9.325,19.058 9.325,19.622 9.325,20.186 8.867,20.644 8.302,20.644 7.738,20.644 7.281,20.186 7.281,19.622 7.281,19.058 7.738,18.601 8.302,18.601 M8.302,15.535C8.867,15.535 9.325,15.993 9.325,16.558 9.325,17.121 8.867,17.579 8.302,17.579 7.738,17.579 7.281,17.121 7.281,16.558 7.281,15.993 7.738,15.535 8.302,15.535 M8.302,12.47C8.867,12.47 9.325,12.927 9.325,13.491 9.325,14.056 8.867,14.514 8.302,14.514 7.738,14.514 7.281,14.056 7.281,13.491 7.281,12.927 7.738,12.47 8.302,12.47 M11.369,24.731C11.933,24.731 12.39,25.188 12.39,25.753 12.39,26.317 11.933,26.774 11.369,26.774 10.803,26.774 10.346,26.317 10.346,25.753 10.346,25.188 10.803,24.731 11.369,24.731 M11.369,21.665C11.933,21.665 12.39,22.124 12.39,22.688 12.39,23.251 11.933,23.71 11.369,23.71 10.803,23.71 10.346,23.251 10.346,22.688 10.346,22.124 10.803,21.665 11.369,21.665 M11.369,18.601C11.933,18.601 12.39,19.058 12.39,19.622 12.39,20.186 11.933,20.644 11.369,20.644 10.803,20.644 10.346,20.186 10.346,19.622 10.346,19.058 10.803,18.601 11.369,18.601 M11.369,15.535C11.933,15.535 12.39,15.993 12.39,16.558 12.39,17.121 11.933,17.579 11.369,17.579 10.803,17.579 10.346,17.121 10.346,16.558 10.346,15.993 10.803,15.535 11.369,15.535 M11.369,12.47C11.933,12.47 12.39,12.927 12.39,13.491 12.39,14.056 11.933,14.514 11.369,14.514 10.803,14.514 10.346,14.056 10.346,13.491 10.346,12.927 10.803,12.47 11.369,12.47 M11.369,9.403C11.933,9.403 12.39,9.86 12.39,10.425 12.39,10.99 11.933,11.446 11.369,11.446 10.803,11.446 10.346,10.99 10.346,10.425 10.346,9.86 10.803,9.403 11.369,9.403 M14.434,27.798C14.999,27.798 15.455,28.254 15.455,28.819 15.455,29.384 14.999,29.841 14.434,29.841 13.869,29.841 13.412,29.384 13.412,28.819 13.412,28.254 13.869,27.798 14.434,27.798 M14.434,24.731C14.999,24.731 15.455,25.188 15.455,25.753 15.455,26.317 14.999,26.774 14.434,26.774 13.869,26.774 13.412,26.317 13.412,25.753 13.412,25.188 13.869,24.731 14.434,24.731 M14.434,21.665C14.999,21.665 15.455,22.124 15.455,22.688 15.455,23.251 14.999,23.71 14.434,23.71 13.869,23.71 13.412,23.251 13.412,22.688 13.412,22.124 13.869,21.665 14.434,21.665 M14.434,18.601C14.999,18.601 15.455,19.058 15.455,19.622 15.455,20.186 14.999,20.644 14.434,20.644 13.869,20.644 13.412,20.186 13.412,19.622 13.412,19.058 13.869,18.601 14.434,18.601 M14.434,15.535C14.999,15.535 15.455,15.993 15.455,16.558 15.455,17.121 14.999,17.579 14.434,17.579 13.869,17.579 13.412,17.121 13.412,16.558 13.412,15.993 13.869,15.535 14.434,15.535 M14.434,12.47C14.999,12.47 15.455,12.927 15.455,13.491 15.455,14.056 14.999,14.514 14.434,14.514 13.869,14.514 13.412,14.056 13.412,13.491 13.412,12.927 13.869,12.47 14.434,12.47 M14.434,9.403C14.999,9.403 15.455,9.86 15.455,10.425 15.455,10.99 14.999,11.446 14.434,11.446 13.869,11.446 13.412,10.99 13.412,10.425 13.412,9.86 13.869,9.403 14.434,9.403 M14.434,6.338C14.999,6.338 15.455,6.796 15.455,7.36 15.455,7.925 14.999,8.382 14.434,8.382 13.869,8.382 13.412,7.925 13.412,7.36 13.412,6.796 13.869,6.338 14.434,6.338 M17.5,27.798C18.064,27.798 18.521,28.254 18.521,28.819 18.521,29.384 18.064,29.841 17.5,29.841 16.933,29.841 16.478,29.384 16.478,28.819 16.478,28.254 16.933,27.798 17.5,27.798 M17.5,24.731C18.064,24.731 18.521,25.188 18.521,25.753 18.521,26.317 18.064,26.774 17.5,26.774 16.933,26.774 16.478,26.317 16.478,25.753 16.478,25.188 16.933,24.731 17.5,24.731 M17.5,21.665C18.064,21.665 18.521,22.124 18.521,22.688 18.521,23.251 18.064,23.71 17.5,23.71 16.933,23.71 16.478,23.251 16.478,22.688 16.478,22.124 16.933,21.665 17.5,21.665 M17.5,18.601C18.064,18.601 18.521,19.058 18.521,19.622 18.521,20.186 18.064,20.644 17.5,20.644 16.933,20.644 16.478,20.186 16.478,19.622 16.478,19.058 16.933,18.601 17.5,18.601 M17.5,15.535C18.064,15.535 18.521,15.993 18.521,16.558 18.521,17.121 18.064,17.579 17.5,17.579 16.933,17.579 16.478,17.121 16.478,16.558 16.478,15.993 16.933,15.535 17.5,15.535 M17.5,12.47C18.064,12.47 18.521,12.927 18.521,13.491 18.521,14.056 18.064,14.514 17.5,14.514 16.933,14.514 16.478,14.056 16.478,13.491 16.478,12.927 16.933,12.47 17.5,12.47 M17.5,9.403C18.064,9.403 18.521,9.86 18.521,10.425 18.521,10.99 18.064,11.446 17.5,11.446 16.933,11.446 16.478,10.99 16.478,10.425 16.478,9.86 16.933,9.403 17.5,9.403 M17.5,6.338C18.064,6.338 18.521,6.796 18.521,7.36 18.521,7.925 18.064,8.382 17.5,8.382 16.933,8.382 16.478,7.925 16.478,7.36 16.478,6.796 16.933,6.338 17.5,6.338 M20.565,27.798C21.129,27.798 21.588,28.254 21.588,28.819 21.588,29.384 21.129,29.841 20.565,29.841 20,29.841 19.542,29.384 19.542,28.819 19.542,28.254 20,27.798 20.565,27.798 M20.565,24.731C21.129,24.731 21.588,25.188 21.588,25.753 21.588,26.317 21.129,26.774 20.565,26.774 20,26.774 19.542,26.317 19.542,25.753 19.542,25.188 20,24.731 20.565,24.731 M20.565,21.665C21.129,21.665 21.588,22.124 21.588,22.688 21.588,23.251 21.129,23.71 20.565,23.71 20,23.71 19.542,23.251 19.542,22.688 19.542,22.124 20,21.665 20.565,21.665 M20.565,18.601C21.129,18.601 21.588,19.058 21.588,19.622 21.588,20.186 21.129,20.644 20.565,20.644 20,20.644 19.542,20.186 19.542,19.622 19.542,19.058 20,18.601 20.565,18.601 M20.565,15.535C21.129,15.535 21.588,15.993 21.588,16.558 21.588,17.121 21.129,17.579 20.565,17.579 20,17.579 19.542,17.121 19.542,16.558 19.542,15.993 20,15.535 20.565,15.535 M20.565,12.47C21.129,12.47 21.588,12.927 21.588,13.491 21.588,14.056 21.129,14.514 20.565,14.514 20,14.514 19.542,14.056 19.542,13.491 19.542,12.927 20,12.47 20.565,12.47 M20.565,9.403C21.129,9.403 21.588,9.86 21.588,10.425 21.588,10.99 21.129,11.446 20.565,11.446 20,11.446 19.542,10.99 19.542,10.425 19.542,9.86 20,9.403 20.565,9.403 M20.565,6.338C21.129,6.338 21.588,6.796 21.588,7.36 21.588,7.925 21.129,8.382 20.565,8.382 20,8.382 19.542,7.925 19.542,7.36 19.542,6.796 20,6.338 20.565,6.338 M23.63,27.798C24.195,27.798 24.651,28.254 24.651,28.819 24.651,29.384 24.195,29.841 23.63,29.841 23.067,29.841 22.609,29.384 22.609,28.819 22.609,28.254 23.067,27.798 23.63,27.798 M23.63,24.731C24.195,24.731 24.651,25.188 24.651,25.753 24.651,26.317 24.195,26.774 23.63,26.774 23.067,26.774 22.609,26.317 22.609,25.753 22.609,25.188 23.067,24.731 23.63,24.731 M23.63,21.665C24.195,21.665 24.651,22.124 24.651,22.688 24.651,23.251 24.195,23.71 23.63,23.71 23.067,23.71 22.609,23.251 22.609,22.688 22.609,22.124 23.067,21.665 23.63,21.665 M23.63,18.601C24.195,18.601 24.651,19.058 24.651,19.622 24.651,20.186 24.195,20.644 23.63,20.644 23.067,20.644 22.609,20.186 22.609,19.622 22.609,19.058 23.067,18.601 23.63,18.601 M23.63,15.535C24.195,15.535 24.651,15.993 24.651,16.558 24.651,17.121 24.195,17.579 23.63,17.579 23.067,17.579 22.609,17.121 22.609,16.558 22.609,15.993 23.067,15.535 23.63,15.535 M23.63,12.47C24.195,12.47 24.651,12.927 24.651,13.491 24.651,14.056 24.195,14.514 23.63,14.514 23.067,14.514 22.609,14.056 22.609,13.491 22.609,12.927 23.067,12.47 23.63,12.47 M23.63,9.403C24.195,9.403 24.651,9.86 24.651,10.425 24.651,10.99 24.195,11.446 23.63,11.446 23.067,11.446 22.609,10.99 22.609,10.425 22.609,9.86 23.067,9.403 23.63,9.403 M23.63,6.338C24.195,6.338 24.651,6.796 24.651,7.36 24.651,7.925 24.195,8.382 23.63,8.382 23.067,8.382 22.609,7.925 22.609,7.36 22.609,6.796 23.067,6.338 23.63,6.338 M26.313,42.406L11.752,42.406 11.752,38.575 26.313,38.575z M26.698,24.731C27.262,24.731 27.718,25.188 27.718,25.753 27.718,26.317 27.262,26.774 26.698,26.774 26.131,26.774 25.673,26.317 25.673,25.753 25.673,25.188 26.131,24.731 26.698,24.731 M26.698,21.665C27.262,21.665 27.718,22.124 27.718,22.688 27.718,23.251 27.262,23.71 26.698,23.71 26.131,23.71 25.673,23.251 25.673,22.688 25.673,22.124 26.131,21.665 26.698,21.665 M26.698,18.601C27.262,18.601 27.718,19.058 27.718,19.622 27.718,20.186 27.262,20.644 26.698,20.644 26.131,20.644 25.673,20.186 25.673,19.622 25.673,19.058 26.131,18.601 26.698,18.601 M26.698,15.535C27.262,15.535 27.718,15.993 27.718,16.558 27.718,17.121 27.262,17.579 26.698,17.579 26.131,17.579 25.673,17.121 25.673,16.558 25.673,15.993 26.131,15.535 26.698,15.535 M26.698,12.47C27.262,12.47 27.718,12.927 27.718,13.491 27.718,14.056 27.262,14.514 26.698,14.514 26.131,14.514 25.673,14.056 25.673,13.491 25.673,12.927 26.131,12.47 26.698,12.47 M26.698,9.403C27.262,9.403 27.718,9.86 27.718,10.425 27.718,10.99 27.262,11.446 26.698,11.446 26.131,11.446 25.673,10.99 25.673,10.425 25.673,9.86 26.131,9.403 26.698,9.403 M29.761,21.665C30.326,21.665 30.781,22.124 30.781,22.688 30.781,23.251 30.326,23.71 29.761,23.71 29.198,23.71 28.74,23.251 28.74,22.688 28.74,22.124 29.198,21.665 29.761,21.665 M29.761,18.601C30.326,18.601 30.781,19.058 30.781,19.622 30.781,20.186 30.326,20.644 29.761,20.644 29.198,20.644 28.74,20.186 28.74,19.622 28.74,19.058 29.198,18.601 29.761,18.601 M29.761,15.535C30.326,15.535 30.781,15.993 30.781,16.558 30.781,17.121 30.326,17.579 29.761,17.579 29.198,17.579 28.74,17.121 28.74,16.558 28.74,15.993 29.198,15.535 29.761,15.535 M29.761,12.47C30.326,12.47 30.781,12.927 30.781,13.491 30.781,14.056 30.326,14.514 29.761,14.514 29.198,14.514 28.74,14.056 28.74,13.491 28.74,12.927 29.198,12.47 29.761,12.47 M0,0L0,45.983 4.407,45.983 4.407,49.56 33.658,49.56 33.658,45.983 38.064,45.983 38.064,0z" Fill="White" Height="49.56" Canvas.Left="0" Canvas.Top="0" Width="38.064"/>
            					</Canvas>
            					<Canvas x:Name="HEADPHONE1" HorizontalAlignment="Right" VerticalAlignment="Center" Height="47.672" Margin="0,10.991,101.15,16.337" Width="51.681" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="F1M47.954,36.3C46.884,36.3,46.02,35.434,46.02,34.367L46.02,22.637C46.02,12.812 35.974,3.865 24.942,3.865 13.91,3.865 3.865,12.812 3.865,22.637L3.865,34.367C3.865,35.434 3,36.3 1.933,36.3 0.864,36.3 0,35.434 0,34.367L0,22.637C0,10.579 11.654,0 24.942,0 38.23,0 49.886,10.579 49.886,22.637L49.886,34.367C49.886,35.434,49.02,36.3,47.954,36.3" Fill="White" Height="36.3" Canvas.Left="0" Canvas.Top="0" Width="49.886"/>
            						<Path Data="F1M6.396,16.951C6.396,18.721 4.966,20.149 3.197,20.149 1.429,20.149 0,18.721 0,16.951L0,3.198C0,1.431 1.429,0 3.197,0 4.966,0 6.396,1.431 6.396,3.198z" Fill="White" Height="20.149" Canvas.Left="3.99" Canvas.Top="24.631" Width="6.396"/>
            						<Path Data="F1M3.757,11.514C1.68,11.514,0,9.83,0,7.756L0,3.758C0,1.684,1.68,0,3.757,0" Fill="White" Height="11.514" Canvas.Left="2.005" Canvas.Top="28.949" Width="3.757"/>
            						<Path Data="F1M5.69,15.38C2.552,15.38,0,12.826,0,9.689L0,5.691C0,2.552 2.552,0 5.69,0 6.756,0 7.623,0.866 7.623,1.933 7.623,3.001 6.756,3.864 5.69,3.864 4.684,3.864 3.865,4.685 3.865,5.691L3.865,9.689C3.865,10.694 4.684,11.516 5.69,11.516 6.756,11.516 7.623,12.38 7.623,13.446 7.623,14.514 6.756,15.38 5.69,15.38" Fill="White" Height="15.379" Canvas.Left="0.072" Canvas.Top="27.016" Width="7.623"/>
            						<Path Data="F1M0,16.951C0,18.721 1.429,20.149 3.197,20.149 4.964,20.149 6.396,18.721 6.396,16.951L6.396,3.198C6.396,1.431 4.964,0 3.197,0 1.429,0 0,1.431 0,3.198z" Fill="White" Height="20.149" Canvas.Left="39.462" Canvas.Top="24.631" Width="6.396"/>
            						<Path Data="F1M0,11.514C2.072,11.514,3.756,9.83,3.756,7.756L3.756,3.758C3.756,1.684,2.072,0,0,0" Fill="White" Height="11.514" Canvas.Left="44.085" Canvas.Top="28.949" Width="3.756"/>
            						<Path Data="F1M1.934,15.38C0.865,15.38 0,14.514 0,13.446 0,12.38 0.865,11.516 1.934,11.516 2.938,11.516 3.758,10.694 3.758,9.689L3.758,5.691C3.758,4.685 2.938,3.864 1.934,3.864 0.865,3.864 0,3.001 0,1.933 0,0.866 0.865,0 1.934,0 5.07,0 7.623,2.552 7.623,5.691L7.623,9.689C7.623,12.826,5.07,15.38,1.934,15.38" Fill="White" Height="15.379" Canvas.Left="42.151" Canvas.Top="27.016" Width="7.623"/>
            					</Canvas>
            					<Label x:Name="label1" Content="Headset" HorizontalAlignment="Left" Margin="6.116,0,0,3.891" VerticalAlignment="Bottom" FontFamily="/ISILS Essential 5.0;component/Fonts/#Melbourne" FontSize="18.667" Foreground="White"/>
            					<Label x:Name="label" Content="PA" HorizontalAlignment="Right" Margin="0,0,16.707,3.891" VerticalAlignment="Bottom" FontFamily="/ISILS Essential 5.0;component/Fonts/#Melbourne" FontSize="18.667" RenderTransformOrigin="0.5,0.5" Opacity="0" Foreground="White">
            						<Label.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Label.RenderTransform>
            					</Label>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="IsPressed" Value="true"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnAux" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<Grid x:Name="grid" Background="#FF859E9D">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="aux_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,15.336,11.998,0"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="aux">
            											<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
            										</ObjectAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="aux_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,41.337,11.998,0"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="aux">
            											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            											<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            										</ObjectAnimationUsingKeyFrames>
            										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="aux_Copy">
            											<DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
            										</ObjectAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="aux_Copy">
            										<EasingThicknessKeyFrame KeyTime="0" Value="0,15.336,11.998,0"/>
            									</ThicknessAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="aux_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="aux">
            										<EasingDoubleKeyFrame KeyTime="0" Value="-15.33"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="aux">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF09CB94"/>
            									</ColorAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="11.998,0,0,7.434" Opacity="0.5"/>
            					<Canvas x:Name="aux" Height="32.533" Width="37.333" Margin="0,15.336,11.998,0" HorizontalAlignment="Right" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Opacity="0.995">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="M2.414,7.862L0,5.067 5.865,0 8.28,2.794z" Fill="White" Height="7.862" Canvas.Left="5.113" Canvas.Top="21.448" Width="8.28"/>
            						<Path Data="F1M0,6.47C2.644,3.222,4.256,1.638,6.15,0L7.261,1.283C5.437,2.859,3.881,4.389,1.318,7.54z" Fill="White" Height="7.54" Canvas.Left="0" Canvas.Top="26.775" Width="7.261"/>
            						<Path Data="M9.292,0L3.248,6.2 0.975,8.652C-0.201,9.67,-0.332,11.447,0.685,12.625L1.104,13.109C2.122,14.287,3.9,14.417,5.078,13.4L7.832,11.506 14.842,6.426z" Fill="White" Height="14.085" Canvas.Left="12.529" Canvas.Top="9.152" Width="14.842"/>
            						<Path Data="M9.694,12.086C9.18,12.05 8.788,11.69 8.818,11.286 8.846,10.88 9.286,10.584 9.801,10.621L14.249,10.945C14.56,10.327,14.791,9.675,14.923,9.004L6.5,8.389C5.987,8.355 5.594,7.993 5.624,7.589 5.653,7.185 6.092,6.888 6.608,6.925L15.069,7.54C15.069,6.866,14.981,6.19,14.8,5.532L7.516,4.999 3.305,4.692C2.793,4.657 2.4,4.298 2.429,3.892 2.459,3.487 2.899,3.19 3.413,3.228L13.649,3.974 14.196,4.013C13.935,3.521 13.618,3.048 13.237,2.608 10.518,-0.54 5.756,-0.888 2.609,1.833 0.751,3.439 -0.131,5.757 0.016,8.03L5.954,14.903C8.185,15.38 10.602,14.843 12.463,13.237 12.781,12.961 13.068,12.664 13.329,12.351z" Fill="White" Height="15.071" Canvas.Left="22.786" Canvas.Top="0" Width="15.069"/>
            					</Canvas>
            					<Canvas x:Name="aux_Copy" Height="32.533" Width="37.333" Margin="0,41.337,11.998,0" HorizontalAlignment="Right" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Opacity="0">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="M2.414,7.862L0,5.067 5.865,0 8.28,2.794z" Fill="White" Height="7.862" Canvas.Left="5.113" Canvas.Top="21.448" Width="8.28"/>
            						<Path Data="F1M0,6.47C2.644,3.222,4.256,1.638,6.15,0L7.261,1.283C5.437,2.859,3.881,4.389,1.318,7.54z" Fill="White" Height="7.54" Canvas.Left="0" Canvas.Top="26.775" Width="7.261"/>
            						<Path Data="M9.292,0L3.248,6.2 0.975,8.652C-0.201,9.67,-0.332,11.447,0.685,12.625L1.104,13.109C2.122,14.287,3.9,14.417,5.078,13.4L7.832,11.506 14.842,6.426z" Fill="White" Height="14.085" Canvas.Left="12.529" Canvas.Top="9.152" Width="14.842"/>
            						<Path Data="M9.694,12.086C9.18,12.05 8.788,11.69 8.818,11.286 8.846,10.88 9.286,10.584 9.801,10.621L14.249,10.945C14.56,10.327,14.791,9.675,14.923,9.004L6.5,8.389C5.987,8.355 5.594,7.993 5.624,7.589 5.653,7.185 6.092,6.888 6.608,6.925L15.069,7.54C15.069,6.866,14.981,6.19,14.8,5.532L7.516,4.999 3.305,4.692C2.793,4.657 2.4,4.298 2.429,3.892 2.459,3.487 2.899,3.19 3.413,3.228L13.649,3.974 14.196,4.013C13.935,3.521 13.618,3.048 13.237,2.608 10.518,-0.54 5.756,-0.888 2.609,1.833 0.751,3.439 -0.131,5.757 0.016,8.03L5.954,14.903C8.185,15.38 10.602,14.843 12.463,13.237 12.781,12.961 13.068,12.664 13.329,12.351z" Fill="White" Height="15.071" Canvas.Left="22.786" Canvas.Top="0" Width="15.069"/>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnHandRaise" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="OnChecked1" RepeatBehavior="Forever" >
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="2.21"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="2.21"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse1">
            							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse1">
            							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="1.468"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse1">
            							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="1.468"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FF698D77" Opacity="1">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
            									<Storyboard>
            										<DoubleAnimation Duration="0:0:0.4" To="-23.331" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Layer_1"/>
            										<DoubleAnimation Duration="0:0:0.4" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Layer_1_Copy"/>
            										<DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Layer_1"/>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Layer_1_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0,21.06,7.481,11.064"/>
            										</ThicknessAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Layer_1_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,36.06,7.481,-3.96"/>
            										</ThicknessAnimationUsingKeyFrames>
            										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Layer_1_Copy">
            											<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-4.722"/>
            										</DoubleAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Layer_1">
            										<EasingDoubleKeyFrame KeyTime="0" Value="-23.331"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Layer_1_Copy">
            										<EasingThicknessKeyFrame KeyTime="0" Value="0,21.06,7.481,11.064"/>
            									</ThicknessAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Layer_1_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Layer_1">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07C24E"/>
            									</ColorAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CROSS">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="9.637,0,0,9.676" Opacity="0.5"/>
            					<Canvas x:Name="CROSS" Height="20" Width="19.2" Margin="11.724,0,0,31.294" HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0.5">
            						<Path Data="F1M9.874,16.082C6.445,16.082 3.666,13.303 3.666,9.874 3.666,6.446 6.445,3.667 9.874,3.667 13.303,3.667 16.082,6.446 16.082,9.874 16.082,13.303 13.303,16.082 9.874,16.082 M9.874,0C4.421,0 0,4.421 0,9.874 0,15.327 4.421,19.749 9.874,19.749 15.328,19.749 19.748,15.327 19.748,9.874 19.748,4.421 15.328,0 9.874,0" Fill="#FFFFF600" Height="19.749" Canvas.Left="0" Canvas.Top="0" Width="19.748"/>
            						<Path Data="F1M2.121,13.207L0,11.086 11.087,0 13.208,2.121z" Fill="#FFFFF600" Height="13.207" Canvas.Left="3.28" Canvas.Top="3.39" Width="13.208"/>
            					</Canvas>
            					<Ellipse x:Name="ellipse" Fill="{x:Null}" HorizontalAlignment="Right" Height="12.79" Margin="0,13.715,16.167,0" VerticalAlignment="Top" Width="12.79" Stroke="White" Opacity="0" RenderTransformOrigin="0.5,0.5" StrokeThickness="2">
            						<Ellipse.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Ellipse.RenderTransform>
            					</Ellipse>
            					<Ellipse x:Name="ellipse1" Fill="{x:Null}" HorizontalAlignment="Right" Height="20.523" Margin="0,9.813,12.862,0" VerticalAlignment="Top" Width="20.523" Stroke="White" Opacity="0" RenderTransformOrigin="0.5,0.5" StrokeThickness="2">
            						<Ellipse.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Ellipse.RenderTransform>
            					</Ellipse>
            					<Canvas x:Name="Layer_1" Height="57.876" Width="40.636" Margin="0,13.56,7.481,3.564" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="1" RenderTransformOrigin="0.5,0.5" d:IsHidden="True">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="F1M2.698,14.744C4.108,14.744,5.258,15.837,5.375,17.221L5.375,26.471C5.375,27.059 5.851,27.535 6.441,27.535 7.028,27.535 7.504,27.059 7.504,26.471L7.504,17.559C7.507,17.519 7.527,17.487 7.527,17.447 7.527,17.369 7.507,17.297 7.504,17.221L7.504,14.987C7.504,13.5 8.717,12.29 10.208,12.29 11.649,12.29 12.817,13.426 12.895,14.844L12.895,26.471C12.895,27.059 13.371,27.535 13.959,27.535 14.546,27.535 15.023,27.059 15.023,26.471L15.023,19.342C15.023,19.314 15.037,19.294 15.037,19.267 15.037,19.217 15.023,19.174 15.023,19.124L15.023,13.248C15.023,11.758 16.234,10.548 17.72,10.548 19.206,10.548 20.418,11.758 20.418,13.248L20.418,26.471C20.418,27.059 20.895,27.535 21.482,27.535 22.07,27.535 22.547,27.059 22.547,26.471L22.547,2.867C22.554,2.811 22.579,2.76 22.579,2.703 22.579,1.212 23.787,0 25.273,0 26.765,0 27.979,1.212 27.979,2.703L27.979,34.239 28.831,34.427C29.872,34.64 29.869,34.63 35.253,22.169 35.621,21.369 36.302,20.744 37.154,20.431 38.003,20.12 38.927,20.161 39.751,20.54L39.912,20.618C40.75,21.006 41.375,21.684 41.685,22.538 41.999,23.39 41.962,24.311 41.581,25.134L29.552,52.709C28.232,55.782,25.582,57.539,22.281,57.539L9.032,57.539C7.101,57.539 5.371,56.856 4.158,55.617 2.781,54.206 2.081,52.12 2.14,49.587L0,17.447C0,15.957,1.212,14.744,2.698,14.744" Fill="White" Height="50.215" Canvas.Left="2.154" Canvas.Top="3.662" Width="36.562" Stretch="Fill"/>
            					</Canvas>
            					<Canvas x:Name="Layer_1_Copy" Height="57.876" Width="40.636" Margin="0,21.477,7.481,-4.353" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path Data="F1M2.698,14.744C4.108,14.744,5.258,15.837,5.375,17.221L5.375,26.471C5.375,27.059 5.851,27.535 6.441,27.535 7.028,27.535 7.504,27.059 7.504,26.471L7.504,17.559C7.507,17.519 7.527,17.487 7.527,17.447 7.527,17.369 7.507,17.297 7.504,17.221L7.504,14.987C7.504,13.5 8.717,12.29 10.208,12.29 11.649,12.29 12.817,13.426 12.895,14.844L12.895,26.471C12.895,27.059 13.371,27.535 13.959,27.535 14.546,27.535 15.023,27.059 15.023,26.471L15.023,19.342C15.023,19.314 15.037,19.294 15.037,19.267 15.037,19.217 15.023,19.174 15.023,19.124L15.023,13.248C15.023,11.758 16.234,10.548 17.72,10.548 19.206,10.548 20.418,11.758 20.418,13.248L20.418,26.471C20.418,27.059 20.895,27.535 21.482,27.535 22.07,27.535 22.547,27.059 22.547,26.471L22.547,2.867C22.554,2.811 22.579,2.76 22.579,2.703 22.579,1.212 23.787,0 25.273,0 26.765,0 27.979,1.212 27.979,2.703L27.979,34.239 28.831,34.427C29.872,34.64 29.869,34.63 35.253,22.169 35.621,21.369 36.302,20.744 37.154,20.431 38.003,20.12 38.927,20.161 39.751,20.54L39.912,20.618C40.75,21.006 41.375,21.684 41.685,22.538 41.999,23.39 41.962,24.311 41.581,25.134L29.552,52.709C28.232,55.782,25.582,57.539,22.281,57.539L9.032,57.539C7.101,57.539 5.371,56.856 4.158,55.617 2.781,54.206 2.081,52.12 2.14,49.587L0,17.447C0,15.957,1.212,14.744,2.698,14.744" Fill="White" Height="47.468" Canvas.Left="4.154" Canvas.Top="3.662" Width="34.562" Stretch="Fill"/>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<EventTrigger RoutedEvent="ToggleButton.Checked" >
            						<BeginStoryboard x:Name="OnChecked1_BeginStoryboard" Storyboard="{StaticResource OnChecked1}" />
            					</EventTrigger>
            					<EventTrigger RoutedEvent="ToggleButton.Unchecked">
            						<StopStoryboard BeginStoryboardName="OnChecked1_BeginStoryboard"/>
            					</EventTrigger>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="btnOpenHouse" TargetType="{x:Type ToggleButton}">
       
            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="checked" RepeatBehavior="Forever">
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path">
            							<SplinePointKeyFrame KeyTime="0:0:0.5" Value="0,13.3404786103668"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="0,0"/>
            						</PointAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
            							<SplinePointKeyFrame KeyTime="0:0:0.5" Value="6.75799992154887,13.3404786103668"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="6.75799992154887,0"/>
            						</PointAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path1">
            							<SplinePointKeyFrame KeyTime="0:0:1.3" Value="0,3.3351196292191"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="0,16.6755982395859"/>
            						</PointAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path1">
            							<SplinePointKeyFrame KeyTime="0:0:1.3" Value="6.75799992154887,3.3351196292191"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="6.75799992154887,16.6755982395859"/>
            						</PointAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path2">
            							<SplinePointKeyFrame KeyTime="0:0:0.7" Value="0,13.3404786103668"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="0,0"/>
            						</PointAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path2">
            							<SplinePointKeyFrame KeyTime="0:0:0.7" Value="6.75699992156048,13.3404786103668"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="6.75699992156048,0"/>
            						</PointAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path3">
            							<SplinePointKeyFrame KeyTime="0:0:0.3" Value="0,-1.77635683940025E-15"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="0,13.3404786103668"/>
            						</PointAnimationUsingKeyFrames>
            						<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path3">
            							<SplinePointKeyFrame KeyTime="0:0:0.3" Value="6.75799992154887,-1.77635683940025E-15"/>
            							<SplinePointKeyFrame KeyTime="0:0:2.3" Value="6.75799992154887,13.3404786103668"/>
            						</PointAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FF698D77">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="POLL_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="11.998,14.038,0,22.03"/>
            										</ThicknessAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5">
            									<Storyboard>
            										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="POLL_Copy">
            											<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="11.998,42.034,0,-5.966"/>
            										</ThicknessAnimationUsingKeyFrames>
            									</Storyboard>
            								</VisualTransition>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="POLL_Copy">
            										<EasingThicknessKeyFrame KeyTime="0" Value="11.998,14.038,0,22.03"/>
            									</ThicknessAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="POLL_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="POLL_Copy1">
            										<EasingDoubleKeyFrame KeyTime="0" Value="-12.692"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="POLL_Copy1">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.2" To="Checked"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF07C24E"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,13.33,8.558" Opacity="0.5"/>
            					<Canvas x:Name="POLL_Copy" Height="38.932" Width="46.399" Margin="11.998,42.034,0,-5.966" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0">
            						<Path Data="M3.779,23.685L0,23.685 0,0 3.779,0z" Fill="White" Height="34.003" Canvas.Left="13.478" Canvas.Top="-0.822" Width="6.758" Stretch="Fill"/>
            						<Path Data="M3.779,11.232L0,11.232 0,0 3.779,0z" Fill="White" Height="16.125" Canvas.Left="2.749" Canvas.Top="17.056" Width="6.758" Stretch="Fill"/>
            						<Path Data="M3.779,16.581L0,16.581 0,0 3.779,0z" Fill="White" Height="23.805" Canvas.Left="24.21" Canvas.Top="9.376" Width="6.757" Stretch="Fill"/>
            						<Path Data="M3.779,5.616L0,5.616 0,0 3.779,0z" Fill="White" Height="8.063" Canvas.Left="34.939" Canvas.Top="25.118" Width="6.758" Stretch="Fill"/>
            					</Canvas>
            					<Canvas x:Name="POLL_Copy1" Height="38.932" Width="46.399" Margin="11.998,14.038,0,22.03" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="1" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path x:Name="path" Fill="White" Height="34.003" Canvas.Left="13.478" Canvas.Top="-0.822" Width="6.758" Stretch="None">
            							<Path.Data>
            								<PathGeometry>
            									<PathFigure IsClosed="True" StartPoint="6.75799992154887,34.0030007667115">
            										<LineSegment Point="0,34.0030007667115"/>
            										<LineSegment Point="0,0"/>
            										<LineSegment Point="6.75799992154887,0"/>
            									</PathFigure>
            								</PathGeometry>
            							</Path.Data>
            						</Path>
            						<Path x:Name="path1" Fill="White" Height="32.801" Canvas.Left="2.749" Canvas.Top="0.381" Width="6.758" Stretch="None">
            							<Path.Data>
            								<PathGeometry>
            									<PathFigure IsClosed="True" StartPoint="6.75799992154887,32.8005977357484">
            										<LineSegment Point="0,32.8005977357484"/>
            										<LineSegment Point="0,16.6755982395859"/>
            										<LineSegment Point="6.75799992154887,16.6755982395859"/>
            									</PathFigure>
            								</PathGeometry>
            							</Path.Data>
            						</Path>
            						<Path x:Name="path2" Fill="White" Height="23.805" Canvas.Left="24.21" Canvas.Top="9.376" Width="6.757" Stretch="None">
            							<Path.Data>
            								<PathGeometry>
            									<PathFigure IsClosed="True" StartPoint="6.75699992156048,23.8050008981759">
            										<LineSegment Point="0,23.8050008981759"/>
            										<LineSegment Point="0,0"/>
            										<LineSegment Point="6.75699992156048,0"/>
            									</PathFigure>
            								</PathGeometry>
            							</Path.Data>
            						</Path>
            						<Path x:Name="path3" Fill="White" Height="21.403" Canvas.Left="34.939" Canvas.Top="11.778" Width="6.758" Stretch="None">
            							<Path.Data>
            								<PathGeometry>
            									<PathFigure IsClosed="True" StartPoint="6.75799992154887,21.4034783584324">
            										<LineSegment Point="0,21.4034783584324"/>
            										<LineSegment Point="0,13.3404786103668"/>
            										<LineSegment Point="6.75799992154887,13.3404786103668"/>
            									</PathFigure>
            								</PathGeometry>
            							</Path.Data>
            						</Path>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsChecked" Value="True">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="checked_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="checked_BeginStoryboard" Storyboard="{StaticResource checked}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="openhousetem" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="checked" RepeatBehavior="Forever">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1.545"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1.545"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
            							<EasingColorKeyFrame KeyTime="0:0:0.8" Value="#FFBD1CF9"/>
            						</ColorAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path11">
            							<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FFF91CB3"/>
            							<EasingColorKeyFrame KeyTime="0:0:1" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FFA28DA0">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver"/>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FFA24198"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8.052,0,0,8.052" Opacity="0.5"/>
            					<Path x:Name="path11" Data="F1M8.06,4.029C8.06,6.255 6.255,8.058 4.03,8.058 1.805,8.058 0,6.255 0,4.029 0,1.803 1.805,-0.001 4.03,-0.001 6.255,-0.001 8.06,1.803 8.06,4.029" Fill="White" Height="8.059" Width="8.06" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,16.67,17.672,0"/>
            					<Ellipse Fill="{x:Null}" HorizontalAlignment="Right" Height="18.334" Margin="0,11.67,12.672,0" VerticalAlignment="Top" Width="18.334" Stroke="White" StrokeThickness="0.5"/>
            					<Ellipse Fill="{x:Null}" HorizontalAlignment="Right" Height="25" Margin="0,8.337,9.339,0" VerticalAlignment="Top" Width="25" Stroke="White" StrokeThickness="0.5" Opacity="0.505"/>
            					<Ellipse x:Name="ellipse" Fill="{x:Null}" HorizontalAlignment="Right" Height="18.334" Margin="0,11.67,12.672,0" VerticalAlignment="Top" Width="18.334" Stroke="White" StrokeThickness="0.5" RenderTransformOrigin="0.5,0.5">
            						<Ellipse.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Ellipse.RenderTransform>
            					</Ellipse>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsChecked" Value="True">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="checked_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="checked_BeginStoryboard" Storyboard="{StaticResource checked}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="closedgroup" TargetType="{x:Type ToggleButton}">
          
            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="checked" RepeatBehavior="Forever">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="-10.93"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="9.519"/>
            						</DoubleAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path4">
            							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
            							<EasingColorKeyFrame KeyTime="0:0:1.6" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="10.93"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="9.872"/>
            						</DoubleAnimationUsingKeyFrames>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path5">
            							<EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
            							<EasingColorKeyFrame KeyTime="0:0:1.6" Value="White"/>
            						</ColorAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path4">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path5">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.376"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="22.061"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0.165"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.567"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.567"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="-21.979"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0.083"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FF7E8C97">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver"/>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF1B75BB"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8.052,0,0,8.052" Opacity="0.5"/>
            					<Canvas x:Name="OPEN_GROUP" Height="21.859" Width="32.789" Margin="0,9.335,12.003,0" HorizontalAlignment="Right" VerticalAlignment="Top">
            						<Path x:Name="path" Data="F1M9.919,4.959C9.919,7.698 7.697,9.919 4.958,9.919 2.22,9.919 0,7.698 0,4.959 0,2.221 2.22,0 4.958,0 7.697,0 9.919,2.221 9.919,4.959" Fill="White" Height="9.919" Canvas.Left="0" Canvas.Top="9.618" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path3" Data="F1M9.918,4.959C9.918,7.698 7.697,9.919 4.959,9.919 2.221,9.919 0,7.698 0,4.959 0,2.221 2.221,0 4.959,0 7.697,0 9.918,2.221 9.918,4.959" Fill="White" Height="9.919" Canvas.Left="22.057" Canvas.Top="9.618" Width="9.918" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path Data="F1M9.919,4.959C9.919,7.698 7.698,9.918 4.959,9.918 2.22,9.918 0,7.698 0,4.959 0,2.22 2.22,0 4.959,0 7.698,0 9.919,2.22 9.919,4.959" Fill="White" Height="9.918" Canvas.Left="11.071" Canvas.Top="0" Width="9.919"/>
            						<Path x:Name="path1" Data="F1M15.843,1.346L1.347,15.842 0,14.496 14.495,-0.001z" Fill="White" Height="15.843" Canvas.Left="3.15" Canvas.Top="1.997" Width="15.843" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path2" Data="F1M14.495,15.843L0,1.347 1.346,0 15.842,14.496z" Fill="White" Height="15.843" Canvas.Left="14.128" Canvas.Top="2.505" Width="15.842" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path4" Data="F1M9.919,4.959C9.919,7.698 7.698,9.918 4.959,9.918 2.22,9.918 0,7.698 0,4.959 0,2.22 2.22,0 4.959,0 7.698,0 9.919,2.22 9.919,4.959" Fill="White" Height="9.918" Canvas.Left="11.071" Canvas.Top="0" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path5" Data="F1M9.919,4.959C9.919,7.698 7.698,9.918 4.959,9.918 2.22,9.918 0,7.698 0,4.959 0,2.22 2.22,0 4.959,0 7.698,0 9.919,2.22 9.919,4.959" Fill="White" Height="9.918" Canvas.Left="11.071" Canvas.Top="0" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Rectangle Fill="White" Height="2.173" Canvas.Left="6.708" Canvas.Top="13.848" Width="19.354"/>
            						<Path x:Name="path_Copy" Data="F1M9.919,4.959C9.919,7.698 7.697,9.919 4.958,9.919 2.22,9.919 0,7.698 0,4.959 0,2.221 2.22,0 4.958,0 7.697,0 9.919,2.221 9.919,4.959" Fill="White" Height="9.919" Canvas.Left="0" Canvas.Top="9.618" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path3_Copy" Data="F1M9.918,4.959C9.918,7.698 7.697,9.919 4.959,9.919 2.221,9.919 0,7.698 0,4.959 0,2.221 2.221,0 4.959,0 7.697,0 9.918,2.221 9.918,4.959" Fill="White" Height="9.919" Canvas.Left="22.057" Canvas.Top="9.618" Width="9.918" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsChecked" Value="True">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="checked_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="checked_BeginStoryboard" Storyboard="{StaticResource checked}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
            <Style x:Key="onetoone" TargetType="{x:Type ToggleButton}">

            	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            	<Setter Property="BorderThickness" Value="1"/>
            	<Setter Property="HorizontalContentAlignment" Value="Center"/>
            	<Setter Property="VerticalContentAlignment" Value="Center"/>
            	<Setter Property="Padding" Value="1"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="checked" RepeatBehavior="Forever">
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="22.061"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0.165"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.567"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.567"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="-21.979"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0.083"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path3_Copy">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
            							<EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid" Background="#FF698D77">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver"/>
            								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="MouseOver">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="OPEN_GROUP_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="-30"/>
            									</DoubleAnimationUsingKeyFrames>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OPEN_GROUP_Copy">
            										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            									</DoubleAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed"/>
            							<VisualState x:Name="Disabled"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="CheckStates">
            							<VisualState x:Name="Checked">
            								<Storyboard>
            									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
            										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            									</DoubleAnimationUsingKeyFrames>
            									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
            										<EasingColorKeyFrame KeyTime="0" Value="#FF009344"/>
            									</ColorAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unchecked"/>
            							<VisualState x:Name="Indeterminate"/>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8.052,0,0,8.052" Opacity="0.5"/>
            					<Canvas x:Name="OPEN_GROUP" Height="21.859" Width="32.789" Margin="0,9.335,12.003,0" HorizontalAlignment="Right" VerticalAlignment="Top">
            						<Path x:Name="path" Data="F1M9.919,4.959C9.919,7.698 7.697,9.919 4.958,9.919 2.22,9.919 0,7.698 0,4.959 0,2.221 2.22,0 4.958,0 7.697,0 9.919,2.221 9.919,4.959" Fill="White" Height="9.919" Canvas.Left="0" Canvas.Top="9.618" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path3" Data="F1M9.918,4.959C9.918,7.698 7.697,9.919 4.959,9.919 2.221,9.919 0,7.698 0,4.959 0,2.221 2.221,0 4.959,0 7.697,0 9.918,2.221 9.918,4.959" Fill="White" Height="9.919" Canvas.Left="22.057" Canvas.Top="9.618" Width="9.918" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Rectangle Fill="White" Height="2.173" Canvas.Left="6.708" Canvas.Top="13.848" Width="19.354"/>
            						<Path x:Name="path_Copy" Data="F1M9.919,4.959C9.919,7.698 7.697,9.919 4.958,9.919 2.22,9.919 0,7.698 0,4.959 0,2.221 2.22,0 4.958,0 7.697,0 9.919,2.221 9.919,4.959" Fill="White" Height="9.919" Canvas.Left="0" Canvas.Top="9.618" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path3_Copy" Data="F1M9.918,4.959C9.918,7.698 7.697,9.919 4.959,9.919 2.221,9.919 0,7.698 0,4.959 0,2.221 2.221,0 4.959,0 7.697,0 9.918,2.221 9.918,4.959" Fill="White" Height="9.919" Canvas.Left="22.057" Canvas.Top="9.618" Width="9.918" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            					</Canvas>
            					<Canvas x:Name="OPEN_GROUP_Copy" Height="21.859" Width="32.789" Margin="0,9.335,12.003,0" HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="1" RenderTransformOrigin="0.5,0.5">
            						<Canvas.RenderTransform>
            							<TransformGroup>
            								<ScaleTransform/>
            								<SkewTransform/>
            								<RotateTransform/>
            								<TranslateTransform/>
            							</TransformGroup>
            						</Canvas.RenderTransform>
            						<Path x:Name="path1" Data="F1M9.919,4.959C9.919,7.698 7.697,9.919 4.958,9.919 2.22,9.919 0,7.698 0,4.959 0,2.221 2.22,0 4.958,0 7.697,0 9.919,2.221 9.919,4.959" Fill="White" Height="9.919" Canvas.Left="0" Canvas.Top="9.618" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path2" Data="F1M9.918,4.959C9.918,7.698 7.697,9.919 4.959,9.919 2.221,9.919 0,7.698 0,4.959 0,2.221 2.221,0 4.959,0 7.697,0 9.918,2.221 9.918,4.959" Fill="White" Height="9.919" Canvas.Left="22.057" Canvas.Top="9.618" Width="9.918" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Rectangle Fill="White" Height="2.173" Canvas.Left="6.708" Canvas.Top="13.848" Width="19.354"/>
            						<Path x:Name="path_Copy1" Data="F1M9.919,4.959C9.919,7.698 7.697,9.919 4.958,9.919 2.22,9.919 0,7.698 0,4.959 0,2.221 2.22,0 4.958,0 7.697,0 9.919,2.221 9.919,4.959" Fill="White" Height="9.919" Canvas.Left="0" Canvas.Top="9.618" Width="9.919" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            						<Path x:Name="path3_Copy1" Data="F1M9.918,4.959C9.918,7.698 7.697,9.919 4.959,9.919 2.221,9.919 0,7.698 0,4.959 0,2.221 2.221,0 4.959,0 7.697,0 9.918,2.221 9.918,4.959" Fill="White" Height="9.919" Canvas.Left="22.057" Canvas.Top="9.618" Width="9.918" RenderTransformOrigin="0.5,0.5">
            							<Path.RenderTransform>
            								<TransformGroup>
            									<ScaleTransform/>
            									<SkewTransform/>
            									<RotateTransform/>
            									<TranslateTransform/>
            								</TransformGroup>
            							</Path.RenderTransform>
            						</Path>
            					</Canvas>
            				</Grid>
            				<ControlTemplate.Triggers>
            					<Trigger Property="Button.IsDefaulted" Value="true"/>
            					<Trigger Property="IsChecked" Value="True">
            						<Trigger.ExitActions>
            							<StopStoryboard BeginStoryboardName="checked_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard x:Name="checked_BeginStoryboard" Storyboard="{StaticResource checked}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsMouseOver" Value="true"/>
            					<Trigger Property="IsPressed" Value="true"/>
            					<Trigger Property="IsEnabled" Value="false"/>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>


        	<System:Double x:Key="Double1">23.214</System:Double>
        	<Style x:Key="desktop_down" TargetType="{x:Type Button}">
         
        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualStateGroup.Transitions>
        									<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
        										<Storyboard>
        											<ColorAnimation Duration="0:0:0.32" To="#FFFBAD17" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
        											<DoubleAnimation BeginTime="0:0:0.18" Duration="0:0:0.32" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP_Copy"/>
        											<DoubleAnimation Duration="0:0:0.32" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP"/>
        											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="DESKTIOP">
        												<DiscreteObjectKeyFrame KeyTime="0:0:0.32" Value="{x:Static VerticalAlignment.Center}"/>
        											</ObjectAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DESKTIOP_Copy">
        												<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-7.625"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DESKTIOP">
        												<EasingDoubleKeyFrame KeyTime="0:0:0.32" Value="-8.75"/>
        											</DoubleAnimationUsingKeyFrames>
        										</Storyboard>
        									</VisualTransition>
        								</VisualStateGroup.Transitions>
        								<VisualState x:Name="Normal">
        									<Storyboard>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle1">
        											<EasingDoubleKeyFrame KeyTime="0" Value="-17"/>
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        											<EasingColorKeyFrame KeyTime="0" Value="#FFFBAD17"/>
        										</ColorAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DESKTIOP_Copy">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="DESKTIOP_Copy">
        											<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
        										</ThicknessAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="DESKTIOP">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Top}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DESKTIOP">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP_Copy">
        											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        										</DoubleAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP">
        											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										</DoubleAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="rectangle1">
        											<EasingDoubleKeyFrame KeyTime="0" Value="-8"/>
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Rectangle x:Name="rectangle" Fill="#FF00A79D" Stroke="{x:Null}"/>
        						<Canvas x:Name="DESKTIOP" Height="22.7" Width="29.9" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Opacity="1">
        							<Canvas.RenderTransform>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform/>
        								</TransformGroup>
        							</Canvas.RenderTransform>
        							<Path Data="M1.974,1.74L28.37,1.74 28.37,16.48 1.974,16.48z M7.974,21.371L12.359,21.371 12.359,19.029 0,19.029 0,0 30.346,0 30.346,19.029 17.986,19.029 17.986,21.371 22.369,21.371 22.369,23.162 7.974,23.162z" Fill="White" Height="23.162" Canvas.Left="0" Canvas.Top="0" Width="30.346"/>
        							<Rectangle Fill="White" Height="4.226" Canvas.Left="3.175" Stroke="{x:Null}" Canvas.Top="3.17" Width="23.817"/>
        						</Canvas>
        						<Canvas x:Name="DESKTIOP_Copy" Height="22.7" Width="29.9" Margin="5.05,18.15,5.05,-0.85" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Visible" Opacity="0" RenderTransformOrigin="0.5,0.5">
        							<Canvas.RenderTransform>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform/>
        								</TransformGroup>
        							</Canvas.RenderTransform>
        							<Path Data="M1.974,1.74L28.37,1.74 28.37,16.48 1.974,16.48z M7.974,21.371L12.359,21.371 12.359,19.029 0,19.029 0,0 30.346,0 30.346,19.029 17.986,19.029 17.986,21.371 22.369,21.371 22.369,23.162 7.974,23.162z" Fill="White" Height="23.162" Canvas.Left="0" Canvas.Top="0" Width="30.346"/>
        							<Rectangle x:Name="rectangle1" Fill="White" Height="4.226" Canvas.Left="3.175" Stroke="{x:Null}" Canvas.Top="10.999" Width="23.817" RenderTransformOrigin="0.5,0.5">
        								<Rectangle.RenderTransform>
        									<TransformGroup>
        										<ScaleTransform/>
        										<SkewTransform/>
        										<RotateTransform/>
        										<TranslateTransform/>
        									</TransformGroup>
        								</Rectangle.RenderTransform>
        							</Rectangle>
        						</Canvas>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="normaldoc" TargetType="{x:Type Button}">
         
        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualStateGroup.Transitions>
        									<VisualTransition GeneratedDuration="0:0:0.5" To="MouseOver">
        										<Storyboard>
        											<ColorAnimation Duration="0:0:0.32" To="#FFFBAD17" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
        											<DoubleAnimation BeginTime="0:0:0.18" Duration="0:0:0.32" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP_Copy"/>
        											<DoubleAnimation Duration="0:0:0.32" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP"/>
        											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="DESKTIOP">
        												<DiscreteObjectKeyFrame KeyTime="0:0:0.32" Value="{x:Static VerticalAlignment.Center}"/>
        											</ObjectAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DESKTIOP_Copy">
        												<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-7.625"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DESKTIOP">
        												<EasingDoubleKeyFrame KeyTime="0:0:0.32" Value="-8.75"/>
        											</DoubleAnimationUsingKeyFrames>
        										</Storyboard>
        									</VisualTransition>
        								</VisualStateGroup.Transitions>
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        											<EasingColorKeyFrame KeyTime="0" Value="#FFFBAD17"/>
        										</ColorAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DESKTIOP_Copy">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="DESKTIOP_Copy">
        											<EasingThicknessKeyFrame KeyTime="0" Value="0"/>
        										</ThicknessAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="DESKTIOP">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Top}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DESKTIOP">
        											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        										</ObjectAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP_Copy">
        											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        										</DoubleAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DESKTIOP">
        											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Rectangle x:Name="rectangle" Fill="#FF00A79D" Stroke="{x:Null}"/>
        						<Canvas x:Name="DESKTIOP" Height="22.7" Width="29.9" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
        							<Canvas.RenderTransform>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform/>
        								</TransformGroup>
        							</Canvas.RenderTransform>
        							<Path Data="M1.974,1.74L28.37,1.74 28.37,16.48 1.974,16.48z M7.974,21.371L12.359,21.371 12.359,19.029 0,19.029 0,0 30.346,0 30.346,19.029 17.986,19.029 17.986,21.371 22.369,21.371 22.369,23.162 7.974,23.162z" Fill="White" Height="23.162" Canvas.Left="0" Canvas.Top="0" Width="30.346"/>
        						</Canvas>
        						<Canvas x:Name="DESKTIOP_Copy" Height="22.7" Width="29.9" Margin="5.05,18.15,5.05,-0.85" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Visible" Opacity="0" RenderTransformOrigin="0.5,0.5">
        							<Canvas.RenderTransform>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform/>
        								</TransformGroup>
        							</Canvas.RenderTransform>
        							<Path Data="M1.974,1.74L28.37,1.74 28.37,16.48 1.974,16.48z M7.974,21.371L12.359,21.371 12.359,19.029 0,19.029 0,0 30.346,0 30.346,19.029 17.986,19.029 17.986,21.371 22.369,21.371 22.369,23.162 7.974,23.162z" Fill="White" Height="23.162" Canvas.Left="0" Canvas.Top="0" Width="30.346"/>
        						</Canvas>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="btnauxtop" TargetType="{x:Type ToggleButton}">

        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Grid x:Name="grid" Background="#FF859E9D">
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver"/>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        							<VisualStateGroup x:Name="CheckStates">
        								<VisualState x:Name="Checked">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
        											<EasingColorKeyFrame KeyTime="0" Value="#FF09CB94"/>
        										</ColorAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Unchecked"/>
        								<VisualState x:Name="Indeterminate"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="Button.IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="dockBrnHandRaise" TargetType="{x:Type ToggleButton}">

        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Grid x:Name="grid" Background="#FF698D77">
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver"/>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        							<VisualStateGroup x:Name="CheckStates">
        								<VisualState x:Name="Checked">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
        											<EasingColorKeyFrame KeyTime="0" Value="#FF07C24E"/>
        										</ColorAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Unchecked"/>
        								<VisualState x:Name="Indeterminate"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="Button.IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="dockBtnClosed" TargetType="{x:Type ToggleButton}">

        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Grid x:Name="grid" Background="#FF7E8C97">
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver"/>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        							<VisualStateGroup x:Name="CheckStates">
        								<VisualState x:Name="Checked">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
        											<EasingColorKeyFrame KeyTime="0" Value="#FF1B75BB"/>
        										</ColorAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Unchecked"/>
        								<VisualState x:Name="Indeterminate"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="Button.IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="DockBtnOnetoOne" TargetType="{x:Type ToggleButton}">

        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Grid x:Name="grid" Background="#FF698D77">
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver"/>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        							<VisualStateGroup x:Name="CheckStates">
        								<VisualState x:Name="Checked">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
        											<EasingColorKeyFrame KeyTime="0" Value="#FF009344"/>
        										</ColorAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Unchecked"/>
        								<VisualState x:Name="Indeterminate"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.5"/>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="Button.IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="close" TargetType="{x:Type Button}">
        		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid x:Name="grid" Background="#FFF15B28">
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
        											<EasingColorKeyFrame KeyTime="0" Value="Red"/>
        										</ColorAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Canvas Margin="8.333,8.334" HorizontalAlignment="Center" VerticalAlignment="Center" Height="23.332" Width="23.334">
        							<Path Data="F1M14.81,14.81C14.16,15.462,13.17,15.53,12.6,14.958L0.388,2.748C-0.183,2.178 -0.117,1.187 0.537,0.535 1.188,-0.117 2.177,-0.182 2.749,0.388L14.958,12.598C15.528,13.167,15.464,14.158,14.81,14.81" Fill="White" Height="22.347" Width="22.347" Margin="0" Stretch="Fill"/>
        							<Path Data="F1M0.537,14.81C1.188,15.462,2.178,15.53,2.746,14.958L14.959,2.748C15.528,2.178 15.465,1.187 14.811,0.535 14.16,-0.117 13.171,-0.182 12.6,0.388L0.389,12.598C-0.183,13.167,-0.116,14.158,0.537,14.81" Fill="White" Height="22.347" Width="22.347" Margin="0" Stretch="Fill" Canvas.Left="0.001"/>
        						</Canvas>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="btn-report" TargetType="{x:Type Button}">
         
        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        											<EasingColorKeyFrame KeyTime="0" Value="#FFFBAD17"/>
        										</ColorAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Rectangle x:Name="rectangle" Fill="#FF00A79D" Stroke="{x:Null}"/>
        						<Rectangle x:Name="rectangle1" Fill="#FFF7E6E6" HorizontalAlignment="Center" Height="12.508" Margin="0" VerticalAlignment="Center" Width="4.627"/>
        						<Rectangle x:Name="rectangle1_Copy" Fill="#FFF7E6E6" HorizontalAlignment="Center" Height="16.254" Margin="42.331,10,28.041,13.746" VerticalAlignment="Center" Width="4.628"/>
        						<Rectangle x:Name="rectangle1_Copy1" Fill="#FFF7E6E6" HorizontalAlignment="Center" Height="8.595" Margin="27.701,17.659,42.671,13.746" VerticalAlignment="Center" Width="4.628"/>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Fill" TargetName="rectangle" Value="#FF0FA700"/>
        							<Setter Property="Canvas.Left" TargetName="rectangle1" Value="6.598"/>
        							<Setter Property="Canvas.Top" TargetName="rectangle1" Value="9.66"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="ToggleButtonReport" TargetType="{x:Type ToggleButton}">

        		<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Padding" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualStateGroup.Transitions>
        									<VisualTransition GeneratedDuration="0:0:0.4" To="MouseOver">
        										<Storyboard>
        											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        												<EasingColorKeyFrame KeyTime="0:0:1" Value="#FFA69133"/>
        											</ColorAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.389"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="-2.953"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path1">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.813"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path1">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="-0.9"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path2">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.248"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path2">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="-3.637"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path3">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1.345"/>
        											</DoubleAnimationUsingKeyFrames>
        											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path3">
        												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1.26"/>
        											</DoubleAnimationUsingKeyFrames>
        										</Storyboard>
        									</VisualTransition>
        								</VisualStateGroup.Transitions>
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver"/>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        							<VisualStateGroup x:Name="CheckStates">
        								<VisualStateGroup.Transitions>
        									<VisualTransition GeneratedDuration="0" To="Checked">
        										<Storyboard>
        											<ColorAnimation Duration="0" To="#FFF9AC19" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle"/>
        										</Storyboard>
        									</VisualTransition>
        								</VisualStateGroup.Transitions>
        								<VisualState x:Name="Checked">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
        											<EasingColorKeyFrame KeyTime="0" Value="#FF00A79D"/>
        										</ColorAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Unchecked"/>
        								<VisualState x:Name="Indeterminate"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Rectangle x:Name="rectangle" Fill="#FF00A79C" Stroke="{x:Null}" RenderTransformOrigin="0.5,0.5">
        							<Rectangle.RenderTransform>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform/>
        								</TransformGroup>
        							</Rectangle.RenderTransform>
        						</Rectangle>
        						<Canvas x:Name="Layer_4" Height="50" Width="50" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left">
        							<Path Data="F1M76.917,90.406L8.49,90.406 8.49,13.015 76.917,13.015z M68.585,0L68.585,9.003 16.574,9.003 16.574,0 0,0 0,97.145 84.909,97.145 84.909,0z" Fill="White" Height="22.636" Canvas.Left="9.097" Canvas.Top="14.683" Width="21.079" Stretch="Fill"/>
        							<Path x:Name="path" Data="F1M41.955,9.739L0,9.739 0,0 41.955,0z" Fill="White" Height="2.614" Canvas.Left="16.601" Canvas.Top="19.885" Width="9.669" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
        								<Path.RenderTransform>
        									<TransformGroup>
        										<ScaleTransform/>
        										<SkewTransform/>
        										<RotateTransform/>
        										<TranslateTransform/>
        									</TransformGroup>
        								</Path.RenderTransform>
        							</Path>
        							<Path Data="F1M9.989,9.739L0,9.739 0,0 9.989,0z" Fill="White" Height="2.614" Canvas.Left="13.118" Canvas.Top="19.885" Width="2.679" Stretch="Fill"/>
        							<Path x:Name="path2" Data="F1M41.955,9.739L0,9.739 0,0 41.955,0z" Fill="White" Height="2.612" Canvas.Left="16.601" Canvas.Top="23.585" Width="9.669" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
        								<Path.RenderTransform>
        									<TransformGroup>
        										<ScaleTransform/>
        										<SkewTransform/>
        										<RotateTransform/>
        										<TranslateTransform/>
        									</TransformGroup>
        								</Path.RenderTransform>
        							</Path>
        							<Path Data="F1M9.989,9.739L0,9.739 0,0 9.989,0z" Fill="White" Height="2.612" Canvas.Left="13.118" Canvas.Top="23.504" Width="2.679" Stretch="Fill"/>
        							<Path x:Name="path1" Data="F1M41.955,9.739L0,9.739 0,0 41.955,0z" Fill="White" Height="2.611" Canvas.Left="16.601" Canvas.Top="27.189" Width="9.669" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
        								<Path.RenderTransform>
        									<TransformGroup>
        										<ScaleTransform/>
        										<SkewTransform/>
        										<RotateTransform/>
        										<TranslateTransform/>
        									</TransformGroup>
        								</Path.RenderTransform>
        							</Path>
        							<Path Data="F1M9.989,9.739L0,9.739 0,0 9.989,0z" Fill="White" Height="2.611" Canvas.Left="13.118" Canvas.Top="27.189" Width="2.679" Stretch="Fill"/>
        							<Path x:Name="path3" Data="F1M31.716,9.739L0,9.739 0,0 31.716,0z" Fill="White" Height="2.612" Canvas.Left="16.601" Canvas.Top="31.007" Width="7.31" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
        								<Path.RenderTransform>
        									<TransformGroup>
        										<ScaleTransform/>
        										<SkewTransform/>
        										<RotateTransform/>
        										<TranslateTransform/>
        									</TransformGroup>
        								</Path.RenderTransform>
        							</Path>
        							<Path Data="F1M9.989,9.739L0,9.739 0,0 9.989,0z" Fill="White" Height="2.612" Canvas.Left="13.118" Canvas.Top="31.007" Width="2.679" Stretch="Fill"/>
        							<Path Data="F1 M26.457,0 C26.459,0.042 26.47,0.081 26.47,0.124 26.47,1.848 25.072,3.246 23.349,3.246 21.624,3.246 20.226,1.848 20.226,0.124 20.226,0.081 20.236,0.042 20.238,0 L0,0 0,11.846151 46.697,11.846151 46.697,0 z" Fill="White" Height="2.722" Canvas.Left="14.257" Canvas.Top="13.16" Width="10.733" Stretch="Fill"/>
        							<Path Data="F1M6.37,9.49C4.644,9.49 3.246,8.092 3.246,6.368 3.246,4.644 4.644,3.246 6.37,3.246 8.094,3.246 9.49,4.644 9.49,6.368 9.49,8.092 8.094,9.49 6.37,9.49 M6.37,0C2.851,0 0,2.851 0,6.368 0,9.885 2.851,12.736 6.37,12.736 9.887,12.736 12.736,9.885 12.736,6.368 12.736,2.851 9.887,0 6.37,0" Fill="White" Height="2.927" Canvas.Left="18.16" Canvas.Top="11.725" Width="2.926" Stretch="Fill"/>
        						</Canvas>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="Button.IsDefaulted" Value="true"/>
        						<Trigger Property="IsMouseOver" Value="true"/>
        						<Trigger Property="IsPressed" Value="true"/>
        						<Trigger Property="IsEnabled" Value="false"/>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
            <FontFamily x:Key="DIGIT">/ISILS Essential 7.1;component/Fonts/#Digital-7</FontFamily>
            <FontFamily x:Key="MELB">/ISILS Essential 7.1;component/Fonts/#Melbourne</FontFamily>


        </ResourceDictionary>

    </Application.Resources>

</Application>